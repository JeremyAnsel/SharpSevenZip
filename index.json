{
  "api/SharpSevenZip.ArchiveFileInfo.html": {
    "href": "api/SharpSevenZip.ArchiveFileInfo.html",
    "title": "Struct ArchiveFileInfo",
    "keywords": "Struct ArchiveFileInfo Struct for storing information about files in the 7-zip archive. Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: SharpSevenZip Assembly: SharpSevenZip.dll Syntax public struct ArchiveFileInfo Properties | Edit this page View Source Attributes Gets or sets file attributes. Declaration [CLSCompliant(false)] public uint Attributes { readonly get; set; } Property Value Type Description uint | Edit this page View Source Comment Gets or sets comment for the file. Declaration public string Comment { readonly get; set; } Property Value Type Description string | Edit this page View Source Crc Gets or sets CRC checksum of the file. Declaration [CLSCompliant(false)] public uint Crc { readonly get; set; } Property Value Type Description uint | Edit this page View Source CreationTime Gets or sets the file creation time. Declaration public DateTime CreationTime { readonly get; set; } Property Value Type Description DateTime | Edit this page View Source Encrypted Gets or sets being encrypted. Declaration public bool Encrypted { readonly get; set; } Property Value Type Description bool | Edit this page View Source FileName Gets or sets file name Declaration public string FileName { readonly get; set; } Property Value Type Description string | Edit this page View Source Index Gets or sets index of the file in the archive file table. Declaration [CLSCompliant(false)] public int Index { readonly get; set; } Property Value Type Description int | Edit this page View Source IsDirectory Gets or sets being a directory. Declaration public bool IsDirectory { readonly get; set; } Property Value Type Description bool | Edit this page View Source LastAccessTime Gets or sets the file creation time. Declaration public DateTime LastAccessTime { readonly get; set; } Property Value Type Description DateTime | Edit this page View Source LastWriteTime Gets or sets the file last write time. Declaration public DateTime LastWriteTime { readonly get; set; } Property Value Type Description DateTime | Edit this page View Source Method Compression method for the file. Declaration public string Method { readonly get; set; } Property Value Type Description string | Edit this page View Source Size Gets or sets size of the file (unpacked). Declaration [CLSCompliant(false)] public ulong Size { readonly get; set; } Property Value Type Description ulong Methods | Edit this page View Source Equals(ArchiveFileInfo) Determines whether the specified ArchiveFileInfo is equal to the current ArchiveFileInfo. Declaration public readonly bool Equals(ArchiveFileInfo afi) Parameters Type Name Description ArchiveFileInfo afi The ArchiveFileInfo to compare with the current ArchiveFileInfo. Returns Type Description bool true if the specified ArchiveFileInfo is equal to the current ArchiveFileInfo; otherwise, false. | Edit this page View Source Equals(object?) Determines whether the specified System.Object is equal to the current ArchiveFileInfo. Declaration public override readonly bool Equals(object? obj) Parameters Type Name Description object obj The System.Object to compare with the current ArchiveFileInfo. Returns Type Description bool true if the specified System.Object is equal to the current ArchiveFileInfo; otherwise, false. Overrides ValueType.Equals(object) | Edit this page View Source GetHashCode() Serves as a hash function for a particular type. Declaration public override readonly int GetHashCode() Returns Type Description int A hash code for the current ArchiveFileInfo. Overrides ValueType.GetHashCode() | Edit this page View Source ToString() Returns a System.String that represents the current ArchiveFileInfo. Declaration public override readonly string ToString() Returns Type Description string A System.String that represents the current ArchiveFileInfo. Overrides ValueType.ToString() Operators | Edit this page View Source operator ==(ArchiveFileInfo, ArchiveFileInfo) Determines whether the specified ArchiveFileInfo instances are considered equal. Declaration public static bool operator ==(ArchiveFileInfo afi1, ArchiveFileInfo afi2) Parameters Type Name Description ArchiveFileInfo afi1 The first ArchiveFileInfo to compare. ArchiveFileInfo afi2 The second ArchiveFileInfo to compare. Returns Type Description bool true if the specified ArchiveFileInfo instances are considered equal; otherwise, false. | Edit this page View Source operator !=(ArchiveFileInfo, ArchiveFileInfo) Determines whether the specified ArchiveFileInfo instances are not considered equal. Declaration public static bool operator !=(ArchiveFileInfo afi1, ArchiveFileInfo afi2) Parameters Type Name Description ArchiveFileInfo afi1 The first ArchiveFileInfo to compare. ArchiveFileInfo afi2 The second ArchiveFileInfo to compare. Returns Type Description bool true if the specified ArchiveFileInfo instances are not considered equal; otherwise, false."
  },
  "api/SharpSevenZip.ArchiveProperty.html": {
    "href": "api/SharpSevenZip.ArchiveProperty.html",
    "title": "Struct ArchiveProperty",
    "keywords": "Struct ArchiveProperty Archive property struct. Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: SharpSevenZip Assembly: SharpSevenZip.dll Syntax public struct ArchiveProperty Properties | Edit this page View Source Name Gets the name of the archive property. Declaration public readonly string Name { get; } Property Value Type Description string | Edit this page View Source Value Gets the value of the archive property. Declaration public readonly object? Value { get; } Property Value Type Description object Methods | Edit this page View Source Equals(ArchiveProperty) Determines whether the specified ArchiveProperty is equal to the current ArchiveProperty. Declaration public readonly bool Equals(ArchiveProperty afi) Parameters Type Name Description ArchiveProperty afi The ArchiveProperty to compare with the current ArchiveProperty. Returns Type Description bool true if the specified ArchiveProperty is equal to the current ArchiveProperty; otherwise, false. | Edit this page View Source Equals(object?) Determines whether the specified System.Object is equal to the current ArchiveProperty. Declaration public override readonly bool Equals(object? obj) Parameters Type Name Description object obj The System.Object to compare with the current ArchiveProperty. Returns Type Description bool true if the specified System.Object is equal to the current ArchiveProperty; otherwise, false. Overrides ValueType.Equals(object) | Edit this page View Source GetHashCode() Serves as a hash function for a particular type. Declaration public override readonly int GetHashCode() Returns Type Description int A hash code for the current ArchiveProperty. Overrides ValueType.GetHashCode() | Edit this page View Source ToString() Returns a System.String that represents the current ArchiveProperty. Declaration public override readonly string ToString() Returns Type Description string A System.String that represents the current ArchiveProperty. Overrides ValueType.ToString() Operators | Edit this page View Source operator ==(ArchiveProperty, ArchiveProperty) Determines whether the specified ArchiveProperty instances are considered equal. Declaration public static bool operator ==(ArchiveProperty afi1, ArchiveProperty afi2) Parameters Type Name Description ArchiveProperty afi1 The first ArchiveProperty to compare. ArchiveProperty afi2 The second ArchiveProperty to compare. Returns Type Description bool true if the specified ArchiveProperty instances are considered equal; otherwise, false. | Edit this page View Source operator !=(ArchiveProperty, ArchiveProperty) Determines whether the specified ArchiveProperty instances are not considered equal. Declaration public static bool operator !=(ArchiveProperty afi1, ArchiveProperty afi2) Parameters Type Name Description ArchiveProperty afi1 The first ArchiveProperty to compare. ArchiveProperty afi2 The second ArchiveProperty to compare. Returns Type Description bool true if the specified ArchiveProperty instances are not considered equal; otherwise, false."
  },
  "api/SharpSevenZip.CompressionLevel.html": {
    "href": "api/SharpSevenZip.CompressionLevel.html",
    "title": "Enum CompressionLevel",
    "keywords": "Enum CompressionLevel Compression level enumeration Namespace: SharpSevenZip Assembly: SharpSevenZip.dll Syntax public enum CompressionLevel Fields Name Description Fast Very low compression level High High compression level Low Low compression level None No compression Normal Normal compression level (default) Ultra The best compression level (slow)"
  },
  "api/SharpSevenZip.CompressionMethod.html": {
    "href": "api/SharpSevenZip.CompressionMethod.html",
    "title": "Enum CompressionMethod",
    "keywords": "Enum CompressionMethod Compression method enumeration. Namespace: SharpSevenZip Assembly: SharpSevenZip.dll Syntax public enum CompressionMethod Remarks Some methods are applicable only to Zip format, some - only to 7-zip. Fields Name Description BZip2 Zip or 7-zip|Bzip2 method. Copy Zip or 7-zip|no compression method. Default No method change. Deflate Zip|Deflate method. Deflate64 Zip|Deflate64 method. Lzma Zip or 7-zip|LZMA method based on Lempel-Ziv algorithm, it is default for 7-zip. Lzma2 7-zip|LZMA version 2, LZMA with improved multithreading and usually slight archive size decrease. Ppmd Zip or 7-zip|PPMd method based on Dmitry Shkarin's PPMdH source code, very efficient for compressing texts."
  },
  "api/SharpSevenZip.CompressionMode.html": {
    "href": "api/SharpSevenZip.CompressionMode.html",
    "title": "Enum CompressionMode",
    "keywords": "Enum CompressionMode Archive compression mode. Namespace: SharpSevenZip Assembly: SharpSevenZip.dll Syntax public enum CompressionMode Fields Name Description Append Add data to the archive. Create Create a new archive; overwrite the existing one."
  },
  "api/SharpSevenZip.EventArguments.ExtractFileCallbackArgs.html": {
    "href": "api/SharpSevenZip.EventArguments.ExtractFileCallbackArgs.html",
    "title": "Class ExtractFileCallbackArgs",
    "keywords": "Class ExtractFileCallbackArgs The arguments passed to ExtractFileCallback. Inheritance object EventArgs ExtractFileCallbackArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SharpSevenZip.EventArguments Assembly: SharpSevenZip.dll Syntax public class ExtractFileCallbackArgs : EventArgs Remarks For each file, ExtractFileCallback is first called with Reason set to Start. If the callback chooses to extract the file data by setting ExtractToFile or ExtractToStream, the callback will be called a second time with Reason set to Done or Failure to allow for any cleanup task like closing the stream. Constructors | Edit this page View Source ExtractFileCallbackArgs(ArchiveFileInfo) Initializes a new instance of the ExtractFileCallbackArgs class. Declaration public ExtractFileCallbackArgs(ArchiveFileInfo archiveFileInfo) Parameters Type Name Description ArchiveFileInfo archiveFileInfo The information about file in the archive. Properties | Edit this page View Source ArchiveFileInfo Information about file in the archive. Declaration public ArchiveFileInfo ArchiveFileInfo { get; } Property Value Type Description ArchiveFileInfo Information about file in the archive. | Edit this page View Source CancelExtraction Gets or sets a value indicating whether to cancel the extraction. Declaration public bool CancelExtraction { get; set; } Property Value Type Description bool true to cancel the extraction; false to continue. The default is false. | Edit this page View Source Exception The exception that occurred during extraction. Declaration public Exception? Exception { get; set; } Property Value Type Description Exception The _Exception. Remarks If the callback is called with Reason set to Failure, this member contains the _Exception that occurred. The default behavior is to rethrow the _Exception after return of the callback. However the callback can set Exception to null to swallow the _Exception and continue extraction with the next file. | Edit this page View Source ExtractToFile Gets or sets whether and where to extract the file. Declaration public string? ExtractToFile { get; set; } Property Value Type Description string The path where to extract the file to. Remarks If ExtractToStream is set, this mmember will be ignored. | Edit this page View Source ExtractToStream Gets or sets whether and where to extract the file. Declaration public Stream? ExtractToStream { get; set; } Property Value Type Description Stream The the extracted data is written to. Remarks If both this member and ExtractToFile are null (the defualt), the file will not be extracted and the callback will be be executed a second time with the Reason set to Done or Failure. | Edit this page View Source ObjectData Gets or sets any data that will be preserved between the Start callback call and the Done or Failure calls. Declaration public object? ObjectData { get; set; } Property Value Type Description object The data. | Edit this page View Source Reason The reason for calling ExtractFileCallback. Declaration public ExtractFileCallbackReason Reason { get; } Property Value Type Description ExtractFileCallbackReason The reason. Remarks If neither ExtractToFile nor ExtractToStream is set, ExtractFileCallback will not be called after Start."
  },
  "api/SharpSevenZip.EventArguments.ExtractFileCallbackReason.html": {
    "href": "api/SharpSevenZip.EventArguments.ExtractFileCallbackReason.html",
    "title": "Enum ExtractFileCallbackReason",
    "keywords": "Enum ExtractFileCallbackReason The reason for calling ExtractFileCallback. Namespace: SharpSevenZip.EventArguments Assembly: SharpSevenZip.dll Syntax public enum ExtractFileCallbackReason Fields Name Description Done All data has been written to the target without any exceptions. Failure An exception occurred during extraction of the file. Start ExtractFileCallback is called the first time for a file."
  },
  "api/SharpSevenZip.EventArguments.FileInfoEventArgs.html": {
    "href": "api/SharpSevenZip.EventArguments.FileInfoEventArgs.html",
    "title": "Class FileInfoEventArgs",
    "keywords": "Class FileInfoEventArgs EventArgs used to report the file information which is going to be packed. Inheritance object EventArgs PercentDoneEventArgs FileInfoEventArgs Implements ICancellable Inherited Members PercentDoneEventArgs.PercentDone EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: SharpSevenZip.EventArguments Assembly: SharpSevenZip.dll Syntax public sealed class FileInfoEventArgs : PercentDoneEventArgs, ICancellable Constructors | Edit this page View Source FileInfoEventArgs(ArchiveFileInfo, byte) Initializes a new instance of the FileInfoEventArgs class. Declaration public FileInfoEventArgs(ArchiveFileInfo fileInfo, byte percentDone) Parameters Type Name Description ArchiveFileInfo fileInfo The current ArchiveFileInfo. byte percentDone The percent of finished work. Properties | Edit this page View Source Cancel Gets or sets whether to stop the current archive operation. Declaration public bool Cancel { get; set; } Property Value Type Description bool | Edit this page View Source FileInfo Gets the corresponding FileInfo to the event. Declaration public ArchiveFileInfo FileInfo { get; } Property Value Type Description ArchiveFileInfo | Edit this page View Source Skip Gets or sets whether to skip the current file. Declaration public bool Skip { get; set; } Property Value Type Description bool Implements ICancellable"
  },
  "api/SharpSevenZip.EventArguments.FileNameEventArgs.html": {
    "href": "api/SharpSevenZip.EventArguments.FileNameEventArgs.html",
    "title": "Class FileNameEventArgs",
    "keywords": "Class FileNameEventArgs EventArgs class which stores the file name. Inheritance object EventArgs PercentDoneEventArgs FileNameEventArgs Implements ICancellable Inherited Members PercentDoneEventArgs.PercentDone EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: SharpSevenZip.EventArguments Assembly: SharpSevenZip.dll Syntax public sealed class FileNameEventArgs : PercentDoneEventArgs, ICancellable Constructors | Edit this page View Source FileNameEventArgs(string, byte) Initializes a new instance of the FileNameEventArgs class. Declaration public FileNameEventArgs(string fileName, byte percentDone) Parameters Type Name Description string fileName The file name. byte percentDone The percent of finished work Properties | Edit this page View Source Cancel Gets or sets whether to stop the current archive operation. Declaration public bool Cancel { get; set; } Property Value Type Description bool | Edit this page View Source FileName Gets the file name. Declaration public string FileName { get; } Property Value Type Description string | Edit this page View Source Skip Gets or sets whether to stop the current archive operation. Declaration public bool Skip { get; set; } Property Value Type Description bool Implements ICancellable"
  },
  "api/SharpSevenZip.EventArguments.FileOverwriteEventArgs.html": {
    "href": "api/SharpSevenZip.EventArguments.FileOverwriteEventArgs.html",
    "title": "Class FileOverwriteEventArgs",
    "keywords": "Class FileOverwriteEventArgs EventArgs for FileExists event, stores the file name and asks whether to overwrite it in case it already exists. Inheritance object EventArgs FileOverwriteEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: SharpSevenZip.EventArguments Assembly: SharpSevenZip.dll Syntax public sealed class FileOverwriteEventArgs : EventArgs Constructors | Edit this page View Source FileOverwriteEventArgs(string) Initializes a new instance of the FileOverwriteEventArgs class Declaration public FileOverwriteEventArgs(string fileName) Parameters Type Name Description string fileName The file name. Properties | Edit this page View Source Cancel Gets or sets the value indicating whether to cancel the extraction. Declaration public bool Cancel { get; set; } Property Value Type Description bool | Edit this page View Source FileName Gets or sets the file name to extract to. Null means skip. Declaration public string FileName { get; set; } Property Value Type Description string"
  },
  "api/SharpSevenZip.EventArguments.IntEventArgs.html": {
    "href": "api/SharpSevenZip.EventArguments.IntEventArgs.html",
    "title": "Class IntEventArgs",
    "keywords": "Class IntEventArgs Stores an int number Inheritance object EventArgs IntEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: SharpSevenZip.EventArguments Assembly: SharpSevenZip.dll Syntax public sealed class IntEventArgs : EventArgs Constructors | Edit this page View Source IntEventArgs(int) Initializes a new instance of the IntEventArgs class Declaration public IntEventArgs(int value) Parameters Type Name Description int value Useful data carried by the IntEventArgs class Properties | Edit this page View Source Value Gets the value of the IntEventArgs class Declaration public int Value { get; } Property Value Type Description int"
  },
  "api/SharpSevenZip.EventArguments.OpenEventArgs.html": {
    "href": "api/SharpSevenZip.EventArguments.OpenEventArgs.html",
    "title": "Class OpenEventArgs",
    "keywords": "Class OpenEventArgs EventArgs used to report the size of unpacked archive data Inheritance object EventArgs OpenEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: SharpSevenZip.EventArguments Assembly: SharpSevenZip.dll Syntax public sealed class OpenEventArgs : EventArgs Constructors | Edit this page View Source OpenEventArgs(ulong) Initializes a new instance of the OpenEventArgs class Declaration [CLSCompliant(false)] public OpenEventArgs(ulong totalSize) Parameters Type Name Description ulong totalSize Size of unpacked archive data Properties | Edit this page View Source TotalSize Gets the size of unpacked archive data Declaration [CLSCompliant(false)] public ulong TotalSize { get; } Property Value Type Description ulong"
  },
  "api/SharpSevenZip.EventArguments.PercentDoneEventArgs.html": {
    "href": "api/SharpSevenZip.EventArguments.PercentDoneEventArgs.html",
    "title": "Class PercentDoneEventArgs",
    "keywords": "Class PercentDoneEventArgs EventArgs for storing PercentDone property. Inheritance object EventArgs PercentDoneEventArgs FileInfoEventArgs FileNameEventArgs ProgressEventArgs Inherited Members EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SharpSevenZip.EventArguments Assembly: SharpSevenZip.dll Syntax public class PercentDoneEventArgs : EventArgs Constructors | Edit this page View Source PercentDoneEventArgs(byte) Initializes a new instance of the PercentDoneEventArgs class. Declaration public PercentDoneEventArgs(byte percentDone) Parameters Type Name Description byte percentDone The percent of finished work. Exceptions Type Condition ArgumentOutOfRangeException Properties | Edit this page View Source PercentDone Gets the percent of finished work. Declaration public byte PercentDone { get; } Property Value Type Description byte"
  },
  "api/SharpSevenZip.EventArguments.ProgressEventArgs.html": {
    "href": "api/SharpSevenZip.EventArguments.ProgressEventArgs.html",
    "title": "Class ProgressEventArgs",
    "keywords": "Class ProgressEventArgs The EventArgs class for accurate progress handling. Inheritance object EventArgs PercentDoneEventArgs ProgressEventArgs Inherited Members PercentDoneEventArgs.PercentDone EventArgs.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: SharpSevenZip.EventArguments Assembly: SharpSevenZip.dll Syntax public sealed class ProgressEventArgs : PercentDoneEventArgs Constructors | Edit this page View Source ProgressEventArgs(byte, byte) Initializes a new instance of the ProgressEventArgs class. Declaration public ProgressEventArgs(byte percentDone, byte percentDelta) Parameters Type Name Description byte percentDone The percent of finished work. byte percentDelta The percent of work done after the previous event. Properties | Edit this page View Source PercentDelta Gets the change in done work percentage. Declaration public byte PercentDelta { get; } Property Value Type Description byte"
  },
  "api/SharpSevenZip.EventArguments.html": {
    "href": "api/SharpSevenZip.EventArguments.html",
    "title": "Namespace SharpSevenZip.EventArguments",
    "keywords": "Namespace SharpSevenZip.EventArguments Classes ExtractFileCallbackArgs The arguments passed to ExtractFileCallback. FileInfoEventArgs EventArgs used to report the file information which is going to be packed. FileNameEventArgs EventArgs class which stores the file name. FileOverwriteEventArgs EventArgs for FileExists event, stores the file name and asks whether to overwrite it in case it already exists. IntEventArgs Stores an int number OpenEventArgs EventArgs used to report the size of unpacked archive data PercentDoneEventArgs EventArgs for storing PercentDone property. ProgressEventArgs The EventArgs class for accurate progress handling. Enums ExtractFileCallbackReason The reason for calling ExtractFileCallback."
  },
  "api/SharpSevenZip.EventSynchronizationStrategy.html": {
    "href": "api/SharpSevenZip.EventSynchronizationStrategy.html",
    "title": "Enum EventSynchronizationStrategy",
    "keywords": "Enum EventSynchronizationStrategy The way of the event synchronization. Namespace: SharpSevenZip Assembly: SharpSevenZip.dll Syntax public enum EventSynchronizationStrategy Fields Name Description AlwaysAsynchronous Always call events asynchronously. AlwaysSynchronous Always call events synchronously. Default Events are called synchronously if user can do some action; that is, cancel the execution process for example."
  },
  "api/SharpSevenZip.Exceptions.CompressionFailedException.html": {
    "href": "api/SharpSevenZip.Exceptions.CompressionFailedException.html",
    "title": "Class CompressionFailedException",
    "keywords": "Class CompressionFailedException Exception class for ArchiveUpdateCallback. Inheritance object Exception SharpSevenZipException CompressionFailedException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: SharpSevenZip.Exceptions Assembly: SharpSevenZip.dll Syntax [Serializable] public class CompressionFailedException : SharpSevenZipException, ISerializable Constructors | Edit this page View Source CompressionFailedException() Initializes a new instance of the CompressionFailedException class Declaration public CompressionFailedException() | Edit this page View Source CompressionFailedException(SerializationInfo, StreamingContext) Initializes a new instance of the CompressionFailedException class Declaration protected CompressionFailedException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info All data needed for serialization or deserialization StreamingContext context Serialized stream descriptor | Edit this page View Source CompressionFailedException(string) Initializes a new instance of the CompressionFailedException class Declaration public CompressionFailedException(string message) Parameters Type Name Description string message Additional detailed message | Edit this page View Source CompressionFailedException(string, Exception) Initializes a new instance of the CompressionFailedException class Declaration public CompressionFailedException(string message, Exception inner) Parameters Type Name Description string message Additional detailed message Exception inner Inner exception occurred Fields | Edit this page View Source DEFAULT_MESSAGE Exception default message which is displayed if no extra information is specified Declaration public const string DEFAULT_MESSAGE = \"Could not pack files!\" Field Value Type Description string Implements ISerializable"
  },
  "api/SharpSevenZip.Exceptions.ExtractionFailedException.html": {
    "href": "api/SharpSevenZip.Exceptions.ExtractionFailedException.html",
    "title": "Class ExtractionFailedException",
    "keywords": "Class ExtractionFailedException Exception class for ArchiveExtractCallback. Inheritance object Exception SharpSevenZipException ExtractionFailedException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: SharpSevenZip.Exceptions Assembly: SharpSevenZip.dll Syntax [Serializable] public class ExtractionFailedException : SharpSevenZipException, ISerializable Constructors | Edit this page View Source ExtractionFailedException() Initializes a new instance of the ExtractionFailedException class Declaration public ExtractionFailedException() | Edit this page View Source ExtractionFailedException(SerializationInfo, StreamingContext) Initializes a new instance of the ExtractionFailedException class Declaration protected ExtractionFailedException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info All data needed for serialization or deserialization StreamingContext context Serialized stream descriptor | Edit this page View Source ExtractionFailedException(string) Initializes a new instance of the ExtractionFailedException class Declaration public ExtractionFailedException(string message) Parameters Type Name Description string message Additional detailed message | Edit this page View Source ExtractionFailedException(string, Exception) Initializes a new instance of the ExtractionFailedException class Declaration public ExtractionFailedException(string message, Exception inner) Parameters Type Name Description string message Additional detailed message Exception inner Inner exception occurred Fields | Edit this page View Source DEFAULT_MESSAGE Exception default message which is displayed if no extra information is specified Declaration public const string DEFAULT_MESSAGE = \"Could not extract files!\" Field Value Type Description string Implements ISerializable"
  },
  "api/SharpSevenZip.Exceptions.LzmaException.html": {
    "href": "api/SharpSevenZip.Exceptions.LzmaException.html",
    "title": "Class LzmaException",
    "keywords": "Class LzmaException Exception class for LZMA operations. Inheritance object Exception SharpSevenZipException LzmaException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: SharpSevenZip.Exceptions Assembly: SharpSevenZip.dll Syntax [Serializable] public class LzmaException : SharpSevenZipException, ISerializable Constructors | Edit this page View Source LzmaException() Initializes a new instance of the LzmaException class Declaration public LzmaException() | Edit this page View Source LzmaException(SerializationInfo, StreamingContext) Initializes a new instance of the LzmaException class Declaration protected LzmaException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info All data needed for serialization or deserialization StreamingContext context Serialized stream descriptor | Edit this page View Source LzmaException(string) Initializes a new instance of the LzmaException class Declaration public LzmaException(string message) Parameters Type Name Description string message Additional detailed message | Edit this page View Source LzmaException(string, Exception) Initializes a new instance of the LzmaException class Declaration public LzmaException(string message, Exception inner) Parameters Type Name Description string message Additional detailed message Exception inner Inner exception occurred Fields | Edit this page View Source DEFAULT_MESSAGE Exception default message which is displayed if no extra information is specified Declaration public const string DEFAULT_MESSAGE = \"Specified stream is not a valid LZMA compressed stream!\" Field Value Type Description string Implements ISerializable"
  },
  "api/SharpSevenZip.Exceptions.SharpSevenZipArchiveException.html": {
    "href": "api/SharpSevenZip.Exceptions.SharpSevenZipArchiveException.html",
    "title": "Class SharpSevenZipArchiveException",
    "keywords": "Class SharpSevenZipArchiveException Exception class for 7-zip archive open or read operations. Inheritance object Exception SharpSevenZipException SharpSevenZipArchiveException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: SharpSevenZip.Exceptions Assembly: SharpSevenZip.dll Syntax [Serializable] public class SharpSevenZipArchiveException : SharpSevenZipException, ISerializable Constructors | Edit this page View Source SharpSevenZipArchiveException() Initializes a new instance of the SharpSevenZipArchiveException class Declaration public SharpSevenZipArchiveException() | Edit this page View Source SharpSevenZipArchiveException(SerializationInfo, StreamingContext) Initializes a new instance of the SharpSevenZipArchiveException class Declaration protected SharpSevenZipArchiveException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info All data needed for serialization or deserialization StreamingContext context Serialized stream descriptor | Edit this page View Source SharpSevenZipArchiveException(string) Initializes a new instance of the SharpSevenZipArchiveException class Declaration public SharpSevenZipArchiveException(string message) Parameters Type Name Description string message Additional detailed message | Edit this page View Source SharpSevenZipArchiveException(string, Exception) Initializes a new instance of the SharpSevenZipArchiveException class Declaration public SharpSevenZipArchiveException(string message, Exception inner) Parameters Type Name Description string message Additional detailed message Exception inner Inner exception occurred Fields | Edit this page View Source DefaultMessage Exception default message which is displayed if no extra information is specified Declaration public static string DefaultMessage Field Value Type Description string Implements ISerializable"
  },
  "api/SharpSevenZip.Exceptions.SharpSevenZipCompressionFailedException.html": {
    "href": "api/SharpSevenZip.Exceptions.SharpSevenZipCompressionFailedException.html",
    "title": "Class SharpSevenZipCompressionFailedException",
    "keywords": "Class SharpSevenZipCompressionFailedException Exception class for fail to create an archive in SharpSevenZipCompressor. Inheritance object Exception SharpSevenZipException SharpSevenZipCompressionFailedException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: SharpSevenZip.Exceptions Assembly: SharpSevenZip.dll Syntax [Serializable] public class SharpSevenZipCompressionFailedException : SharpSevenZipException, ISerializable Constructors | Edit this page View Source SharpSevenZipCompressionFailedException() Initializes a new instance of the SharpSevenZipCompressionFailedException class Declaration public SharpSevenZipCompressionFailedException() | Edit this page View Source SharpSevenZipCompressionFailedException(SerializationInfo, StreamingContext) Initializes a new instance of the SharpSevenZipCompressionFailedException class Declaration protected SharpSevenZipCompressionFailedException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info All data needed for serialization or deserialization StreamingContext context Serialized stream descriptor | Edit this page View Source SharpSevenZipCompressionFailedException(string) Initializes a new instance of the SharpSevenZipCompressionFailedException class Declaration public SharpSevenZipCompressionFailedException(string message) Parameters Type Name Description string message Additional detailed message | Edit this page View Source SharpSevenZipCompressionFailedException(string, Exception) Initializes a new instance of the SharpSevenZipCompressionFailedException class Declaration public SharpSevenZipCompressionFailedException(string message, Exception inner) Parameters Type Name Description string message Additional detailed message Exception inner Inner exception occurred Fields | Edit this page View Source DEFAULT_MESSAGE Exception default message which is displayed if no extra information is specified Declaration public const string DEFAULT_MESSAGE = \"The compression has failed for an unknown reason with code \" Field Value Type Description string Implements ISerializable"
  },
  "api/SharpSevenZip.Exceptions.SharpSevenZipException.html": {
    "href": "api/SharpSevenZip.Exceptions.SharpSevenZipException.html",
    "title": "Class SharpSevenZipException",
    "keywords": "Class SharpSevenZipException Base SharpSevenZip exception class. Inheritance object Exception SharpSevenZipException CompressionFailedException ExtractionFailedException LzmaException SharpSevenZipArchiveException SharpSevenZipCompressionFailedException SharpSevenZipExtractionFailedException SharpSevenZipInvalidFileNamesException SharpSevenZipLibraryException SharpSevenZipSfxValidationException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: SharpSevenZip.Exceptions Assembly: SharpSevenZip.dll Syntax [Serializable] public class SharpSevenZipException : Exception, ISerializable Constructors | Edit this page View Source SharpSevenZipException() Initializes a new instance of the SharpSevenZipException class Declaration public SharpSevenZipException() | Edit this page View Source SharpSevenZipException(SerializationInfo, StreamingContext) Initializes a new instance of the SharpSevenZipException class Declaration protected SharpSevenZipException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info All data needed for serialization or deserialization StreamingContext context Serialized stream descriptor | Edit this page View Source SharpSevenZipException(string) Initializes a new instance of the SharpSevenZipException class Declaration public SharpSevenZipException(string defaultMessage) Parameters Type Name Description string defaultMessage Default exception message | Edit this page View Source SharpSevenZipException(string, Exception) Initializes a new instance of the SharpSevenZipException class Declaration public SharpSevenZipException(string defaultMessage, Exception inner) Parameters Type Name Description string defaultMessage Default exception message Exception inner Inner exception occurred | Edit this page View Source SharpSevenZipException(string, string) Initializes a new instance of the SharpSevenZipException class Declaration public SharpSevenZipException(string defaultMessage, string message) Parameters Type Name Description string defaultMessage Default exception message string message Additional detailed message | Edit this page View Source SharpSevenZipException(string, string, Exception) Initializes a new instance of the SharpSevenZipException class Declaration public SharpSevenZipException(string defaultMessage, string message, Exception inner) Parameters Type Name Description string defaultMessage Default exception message string message Additional detailed message Exception inner Inner exception occurred Implements ISerializable"
  },
  "api/SharpSevenZip.Exceptions.SharpSevenZipExtractionFailedException.html": {
    "href": "api/SharpSevenZip.Exceptions.SharpSevenZipExtractionFailedException.html",
    "title": "Class SharpSevenZipExtractionFailedException",
    "keywords": "Class SharpSevenZipExtractionFailedException Exception class for fail to extract an archive in SharpSevenZipExtractor. Inheritance object Exception SharpSevenZipException SharpSevenZipExtractionFailedException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: SharpSevenZip.Exceptions Assembly: SharpSevenZip.dll Syntax [Serializable] public class SharpSevenZipExtractionFailedException : SharpSevenZipException, ISerializable Constructors | Edit this page View Source SharpSevenZipExtractionFailedException() Initializes a new instance of the SharpSevenZipExtractionFailedException class Declaration public SharpSevenZipExtractionFailedException() | Edit this page View Source SharpSevenZipExtractionFailedException(SerializationInfo, StreamingContext) Initializes a new instance of the SharpSevenZipExtractionFailedException class Declaration protected SharpSevenZipExtractionFailedException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info All data needed for serialization or deserialization StreamingContext context Serialized stream descriptor | Edit this page View Source SharpSevenZipExtractionFailedException(string) Initializes a new instance of the SharpSevenZipExtractionFailedException class Declaration public SharpSevenZipExtractionFailedException(string message) Parameters Type Name Description string message Additional detailed message | Edit this page View Source SharpSevenZipExtractionFailedException(string, Exception) Initializes a new instance of the SharpSevenZipExtractionFailedException class Declaration public SharpSevenZipExtractionFailedException(string message, Exception inner) Parameters Type Name Description string message Additional detailed message Exception inner Inner exception occurred Fields | Edit this page View Source DEFAULT_MESSAGE Exception default message which is displayed if no extra information is specified Declaration public const string DEFAULT_MESSAGE = \"The extraction has failed for an unknown reason with code \" Field Value Type Description string Implements ISerializable"
  },
  "api/SharpSevenZip.Exceptions.SharpSevenZipInvalidFileNamesException.html": {
    "href": "api/SharpSevenZip.Exceptions.SharpSevenZipInvalidFileNamesException.html",
    "title": "Class SharpSevenZipInvalidFileNamesException",
    "keywords": "Class SharpSevenZipInvalidFileNamesException Exception class for empty common root if file name array in SharpSevenZipCompressor. Inheritance object Exception SharpSevenZipException SharpSevenZipInvalidFileNamesException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: SharpSevenZip.Exceptions Assembly: SharpSevenZip.dll Syntax [Serializable] public class SharpSevenZipInvalidFileNamesException : SharpSevenZipException, ISerializable Constructors | Edit this page View Source SharpSevenZipInvalidFileNamesException() Initializes a new instance of the SharpSevenZipInvalidFileNamesException class Declaration public SharpSevenZipInvalidFileNamesException() | Edit this page View Source SharpSevenZipInvalidFileNamesException(SerializationInfo, StreamingContext) Initializes a new instance of the SharpSevenZipInvalidFileNamesException class Declaration protected SharpSevenZipInvalidFileNamesException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info All data needed for serialization or deserialization StreamingContext context Serialized stream descriptor | Edit this page View Source SharpSevenZipInvalidFileNamesException(string) Initializes a new instance of the SharpSevenZipInvalidFileNamesException class Declaration public SharpSevenZipInvalidFileNamesException(string message) Parameters Type Name Description string message Additional detailed message | Edit this page View Source SharpSevenZipInvalidFileNamesException(string, Exception) Initializes a new instance of the SharpSevenZipInvalidFileNamesException class Declaration public SharpSevenZipInvalidFileNamesException(string message, Exception inner) Parameters Type Name Description string message Additional detailed message Exception inner Inner exception occurred Fields | Edit this page View Source DEFAULT_MESSAGE Exception default message which is displayed if no extra information is specified Declaration public const string DEFAULT_MESSAGE = \"Invalid file names have been specified: \" Field Value Type Description string Implements ISerializable"
  },
  "api/SharpSevenZip.Exceptions.SharpSevenZipLibraryException.html": {
    "href": "api/SharpSevenZip.Exceptions.SharpSevenZipLibraryException.html",
    "title": "Class SharpSevenZipLibraryException",
    "keywords": "Class SharpSevenZipLibraryException Exception class for 7-zip library operations. Inheritance object Exception SharpSevenZipException SharpSevenZipLibraryException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: SharpSevenZip.Exceptions Assembly: SharpSevenZip.dll Syntax [Serializable] public class SharpSevenZipLibraryException : SharpSevenZipException, ISerializable Constructors | Edit this page View Source SharpSevenZipLibraryException() Initializes a new instance of the SharpSevenZipLibraryException class Declaration public SharpSevenZipLibraryException() | Edit this page View Source SharpSevenZipLibraryException(SerializationInfo, StreamingContext) Initializes a new instance of the SharpSevenZipLibraryException class Declaration protected SharpSevenZipLibraryException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info All data needed for serialization or deserialization StreamingContext context Serialized stream descriptor | Edit this page View Source SharpSevenZipLibraryException(string) Initializes a new instance of the SharpSevenZipLibraryException class Declaration public SharpSevenZipLibraryException(string message) Parameters Type Name Description string message Additional detailed message | Edit this page View Source SharpSevenZipLibraryException(string, Exception) Initializes a new instance of the SharpSevenZipLibraryException class Declaration public SharpSevenZipLibraryException(string message, Exception inner) Parameters Type Name Description string message Additional detailed message Exception inner Inner exception occurred Fields | Edit this page View Source DEFAULT_MESSAGE Exception default message which is displayed if no extra information is specified Declaration public const string DEFAULT_MESSAGE = \"Can not load 7-zip library or internal COM error!\" Field Value Type Description string Implements ISerializable"
  },
  "api/SharpSevenZip.Exceptions.SharpSevenZipSfxValidationException.html": {
    "href": "api/SharpSevenZip.Exceptions.SharpSevenZipSfxValidationException.html",
    "title": "Class SharpSevenZipSfxValidationException",
    "keywords": "Class SharpSevenZipSfxValidationException Exception class for 7-zip sfx settings validation. Inheritance object Exception SharpSevenZipException SharpSevenZipSfxValidationException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: SharpSevenZip.Exceptions Assembly: SharpSevenZip.dll Syntax [Serializable] public class SharpSevenZipSfxValidationException : SharpSevenZipException, ISerializable Constructors | Edit this page View Source SharpSevenZipSfxValidationException() Initializes a new instance of the SharpSevenZipSfxValidationException class Declaration public SharpSevenZipSfxValidationException() | Edit this page View Source SharpSevenZipSfxValidationException(SerializationInfo, StreamingContext) Initializes a new instance of the SharpSevenZipSfxValidationException class Declaration protected SharpSevenZipSfxValidationException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info All data needed for serialization or deserialization StreamingContext context Serialized stream descriptor | Edit this page View Source SharpSevenZipSfxValidationException(string) Initializes a new instance of the SharpSevenZipSfxValidationException class Declaration public SharpSevenZipSfxValidationException(string message) Parameters Type Name Description string message Additional detailed message | Edit this page View Source SharpSevenZipSfxValidationException(string, Exception) Initializes a new instance of the SharpSevenZipSfxValidationException class Declaration public SharpSevenZipSfxValidationException(string message, Exception inner) Parameters Type Name Description string message Additional detailed message Exception inner Inner exception occurred Fields | Edit this page View Source DefaultMessage Exception default message which is displayed if no extra information is specified Declaration public static readonly string DefaultMessage Field Value Type Description string Implements ISerializable"
  },
  "api/SharpSevenZip.Exceptions.html": {
    "href": "api/SharpSevenZip.Exceptions.html",
    "title": "Namespace SharpSevenZip.Exceptions",
    "keywords": "Namespace SharpSevenZip.Exceptions Classes CompressionFailedException Exception class for ArchiveUpdateCallback. ExtractionFailedException Exception class for ArchiveExtractCallback. LzmaException Exception class for LZMA operations. SharpSevenZipArchiveException Exception class for 7-zip archive open or read operations. SharpSevenZipCompressionFailedException Exception class for fail to create an archive in SharpSevenZipCompressor. SharpSevenZipException Base SharpSevenZip exception class. SharpSevenZipExtractionFailedException Exception class for fail to extract an archive in SharpSevenZipExtractor. SharpSevenZipInvalidFileNamesException Exception class for empty common root if file name array in SharpSevenZipCompressor. SharpSevenZipLibraryException Exception class for 7-zip library operations. SharpSevenZipSfxValidationException Exception class for 7-zip sfx settings validation."
  },
  "api/SharpSevenZip.ExtractFileCallback.html": {
    "href": "api/SharpSevenZip.ExtractFileCallback.html",
    "title": "Delegate ExtractFileCallback",
    "keywords": "Delegate ExtractFileCallback Callback delegate for ExtractFiles(ExtractFileCallback). Namespace: SharpSevenZip Assembly: SharpSevenZip.dll Syntax public delegate void ExtractFileCallback(ExtractFileCallbackArgs extractFileCallbackArgs) Parameters Type Name Description ExtractFileCallbackArgs extractFileCallbackArgs Callback delegate for ."
  },
  "api/SharpSevenZip.ICancellable.html": {
    "href": "api/SharpSevenZip.ICancellable.html",
    "title": "Interface ICancellable",
    "keywords": "Interface ICancellable The definition of the interface which supports the cancellation of a process. Namespace: SharpSevenZip Assembly: SharpSevenZip.dll Syntax public interface ICancellable Properties | Edit this page View Source Cancel Gets or sets whether to stop the current archive operation. Declaration bool Cancel { get; set; } Property Value Type Description bool | Edit this page View Source Skip Gets or sets whether to skip the current file. Declaration bool Skip { get; set; } Property Value Type Description bool"
  },
  "api/SharpSevenZip.InArchiveFormat.html": {
    "href": "api/SharpSevenZip.InArchiveFormat.html",
    "title": "Enum InArchiveFormat",
    "keywords": "Enum InArchiveFormat Readable archive format enumeration. Namespace: SharpSevenZip Assembly: SharpSevenZip.dll Syntax public enum InArchiveFormat Fields Name Description APM APM format. Apfs Apple File System Format. Arj Proprietary Arj archive format. BZip2 Open Bzip2 archive format. Cab Microsoft cabinet archive format. Chm Microsoft Compiled HTML Help file format. Compound Microsoft Compound file format. Cpio Open Cpio archive format. CramFS Compressed ROM file system format. Deb Open Debian software package format. Dmg Apple Mac OS X Disk Copy Disk Image format. Elf Linux executable Elf format. Fat FAT file system format. Flv Flash video format. GZip Open Gzip archive format. Gpt GUID Partition Table. Hfs Macintosh Disk Image on CD. Iso Open ISO disk image format. Lzh Open Lzh archive format. Lzma Open core 7-zip Lzma raw archive format. Lzma86 Lzma86 file format. Lzw Open LZW archive format; implemented in \"compress\" program; also known as \"Z\" archive format. MachO Mach-O file format. Mbr MBR format. Msi Windows Installer Database. Mslz MSLZ archive format. Mub Mub Nsis Nullsoft installation package format. Ntfs NTFS file system format. PE Windows PE executable format. Ppmd Prediction by Partial Matching by Dmitry algorithm. Rar RarLab Rar archive format, version 5. Rar4 RarLab Rar archive format, version 4 or older. Rpm Open Rpm software package format. SevenZip Open 7-zip archive format. Split Open split file format. SquashFS SquashFS file system format. Swf Shockwave Flash format. Swfc Swfc format. TE TE format. Tar Open Tar archive format. UEFIc UEFIc format. UEFIs UEFIs format. Udf Open Udf disk image format. Vhd Microsoft virtual hard disk file format. Wim Microsoft Windows Imaging disk image format. XZ Open Xz archive format. Xar Xar open source archive format. Zip Open Zip archive format."
  },
  "api/SharpSevenZip.LibraryFeature.html": {
    "href": "api/SharpSevenZip.LibraryFeature.html",
    "title": "Enum LibraryFeature",
    "keywords": "Enum LibraryFeature The set of features supported by the library. Namespace: SharpSevenZip Assembly: SharpSevenZip.dll Syntax [Flags] [CLSCompliant(false)] public enum LibraryFeature : uint Fields Name Description Compress7z The library can compress data to 7zip archives with LZMA method. Compress7zAll The library can compress data to 7zip archives with all methods known. Compress7zLZMA2 The library can compress data to 7zip archives with LZMA2 method. CompressAll The library can compress data to all types of archives supported. CompressBzip2 The library can compress data to bzip2 archives. CompressGzip The library can compress data to gzip archives. CompressTar The library can compress data to tar archives. CompressXz The library can compress data to xz archives. CompressZip The library can compress data to zip archives. Extract7z The library can extract 7zip archives compressed with LZMA method. Extract7zAll The library can extract 7z archives compressed with all known methods. Extract7zLZMA2 The library can extract 7zip archives compressed with LZMA2 method. ExtractAll The library can extract all types of archives supported. ExtractBzip2 The library can extract bzip2 archives. ExtractGzip The library can extract gzip archives. ExtractRar The library can extract rar archives. ExtractTar The library can extract tar archives. ExtractXz The library can extract xz archives. ExtractZip The library can extract zip archives. Modify The library can modify archives. None Default feature."
  },
  "api/SharpSevenZip.Lzma.LzmaDecodeStream.html": {
    "href": "api/SharpSevenZip.Lzma.LzmaDecodeStream.html",
    "title": "Class LzmaDecodeStream",
    "keywords": "Class LzmaDecodeStream The stream which decompresses data with LZMA on the fly. Inheritance object MarshalByRefObject Stream LzmaDecodeStream Implements IAsyncDisposable IDisposable Inherited Members Stream.Null Stream.BeginRead(byte[], int, int, AsyncCallback, object) Stream.BeginWrite(byte[], int, int, AsyncCallback, object) Stream.Close() Stream.CopyTo(Stream) Stream.CopyTo(Stream, int) Stream.CopyToAsync(Stream) Stream.CopyToAsync(Stream, int) Stream.CopyToAsync(Stream, int, CancellationToken) Stream.CopyToAsync(Stream, CancellationToken) Stream.CreateWaitHandle() Stream.Dispose() Stream.Dispose(bool) Stream.DisposeAsync() Stream.EndRead(IAsyncResult) Stream.EndWrite(IAsyncResult) Stream.FlushAsync() Stream.FlushAsync(CancellationToken) Stream.ObjectInvariant() Stream.Read(Span<byte>) Stream.ReadAsync(byte[], int, int) Stream.ReadAsync(byte[], int, int, CancellationToken) Stream.ReadAsync(Memory<byte>, CancellationToken) Stream.ReadAtLeast(Span<byte>, int, bool) Stream.ReadAtLeastAsync(Memory<byte>, int, bool, CancellationToken) Stream.ReadByte() Stream.ReadExactly(byte[], int, int) Stream.ReadExactly(Span<byte>) Stream.ReadExactlyAsync(byte[], int, int, CancellationToken) Stream.ReadExactlyAsync(Memory<byte>, CancellationToken) Stream.Synchronized(Stream) Stream.ValidateBufferArguments(byte[], int, int) Stream.ValidateCopyToArguments(Stream, int) Stream.Write(ReadOnlySpan<byte>) Stream.WriteAsync(byte[], int, int) Stream.WriteAsync(byte[], int, int, CancellationToken) Stream.WriteAsync(ReadOnlyMemory<byte>, CancellationToken) Stream.WriteByte(byte) Stream.CanTimeout Stream.ReadTimeout Stream.WriteTimeout MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.MemberwiseClone(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SharpSevenZip.Lzma Assembly: SharpSevenZip.dll Syntax public class LzmaDecodeStream : Stream, IAsyncDisposable, IDisposable Constructors | Edit this page View Source LzmaDecodeStream(Stream) Initializes a new instance of the LzmaDecodeStream class. Declaration public LzmaDecodeStream(Stream encodedStream) Parameters Type Name Description Stream encodedStream A compressed stream. Properties | Edit this page View Source CanRead Gets a value indicating whether the current stream supports reading. Declaration public override bool CanRead { get; } Property Value Type Description bool Overrides Stream.CanRead | Edit this page View Source CanSeek Gets a value indicating whether the current stream supports seeking. Declaration public override bool CanSeek { get; } Property Value Type Description bool Overrides Stream.CanSeek | Edit this page View Source CanWrite Gets a value indicating whether the current stream supports writing. Declaration public override bool CanWrite { get; } Property Value Type Description bool Overrides Stream.CanWrite | Edit this page View Source ChunkSize Gets the chunk size. Declaration public int ChunkSize { get; } Property Value Type Description int | Edit this page View Source Length Gets the length in bytes of the output stream. Declaration public override long Length { get; } Property Value Type Description long Overrides Stream.Length | Edit this page View Source Position Gets or sets the position within the output stream. Declaration public override long Position { get; set; } Property Value Type Description long Overrides Stream.Position Methods | Edit this page View Source Flush() Does nothing. Declaration public override void Flush() Overrides Stream.Flush() | Edit this page View Source Read(byte[], int, int) Reads a sequence of bytes from the current stream and decompresses data if necessary. Declaration public override int Read(byte[] buffer, int offset, int count) Parameters Type Name Description byte[] buffer An array of bytes. int offset The zero-based byte offset in buffer at which to begin storing the data read from the current stream. int count The maximum number of bytes to be read from the current stream. Returns Type Description int The total number of bytes read into the buffer. Overrides Stream.Read(byte[], int, int) | Edit this page View Source Seek(long, SeekOrigin) Sets the position within the current stream. Declaration public override long Seek(long offset, SeekOrigin origin) Parameters Type Name Description long offset A byte offset relative to the origin parameter. SeekOrigin origin A value of type System.IO.SeekOrigin indicating the reference point used to obtain the new position. Returns Type Description long The new position within the current stream. Overrides Stream.Seek(long, SeekOrigin) | Edit this page View Source SetLength(long) Sets the length of the current stream. Declaration public override void SetLength(long value) Parameters Type Name Description long value The desired length of the current stream in bytes. Overrides Stream.SetLength(long) | Edit this page View Source Write(byte[], int, int) Writes a sequence of bytes to the current stream. Declaration public override void Write(byte[] buffer, int offset, int count) Parameters Type Name Description byte[] buffer An array of bytes. int offset The zero-based byte offset in buffer at which to begin storing the data read from the current stream. int count The maximum number of bytes to be read from the current stream. Overrides Stream.Write(byte[], int, int) Implements IAsyncDisposable IDisposable"
  },
  "api/SharpSevenZip.Lzma.LzmaEncodeStream.html": {
    "href": "api/SharpSevenZip.Lzma.LzmaEncodeStream.html",
    "title": "Class LzmaEncodeStream",
    "keywords": "Class LzmaEncodeStream The stream which compresses data with LZMA on the fly. Inheritance object MarshalByRefObject Stream LzmaEncodeStream Implements IAsyncDisposable IDisposable Inherited Members Stream.Null Stream.BeginRead(byte[], int, int, AsyncCallback, object) Stream.BeginWrite(byte[], int, int, AsyncCallback, object) Stream.Close() Stream.CopyTo(Stream) Stream.CopyTo(Stream, int) Stream.CopyToAsync(Stream) Stream.CopyToAsync(Stream, int) Stream.CopyToAsync(Stream, int, CancellationToken) Stream.CopyToAsync(Stream, CancellationToken) Stream.CreateWaitHandle() Stream.Dispose() Stream.DisposeAsync() Stream.EndRead(IAsyncResult) Stream.EndWrite(IAsyncResult) Stream.FlushAsync() Stream.FlushAsync(CancellationToken) Stream.ObjectInvariant() Stream.Read(Span<byte>) Stream.ReadAsync(byte[], int, int) Stream.ReadAsync(byte[], int, int, CancellationToken) Stream.ReadAsync(Memory<byte>, CancellationToken) Stream.ReadAtLeast(Span<byte>, int, bool) Stream.ReadAtLeastAsync(Memory<byte>, int, bool, CancellationToken) Stream.ReadByte() Stream.ReadExactly(byte[], int, int) Stream.ReadExactly(Span<byte>) Stream.ReadExactlyAsync(byte[], int, int, CancellationToken) Stream.ReadExactlyAsync(Memory<byte>, CancellationToken) Stream.Synchronized(Stream) Stream.ValidateBufferArguments(byte[], int, int) Stream.ValidateCopyToArguments(Stream, int) Stream.Write(ReadOnlySpan<byte>) Stream.WriteAsync(byte[], int, int) Stream.WriteAsync(byte[], int, int, CancellationToken) Stream.WriteAsync(ReadOnlyMemory<byte>, CancellationToken) Stream.WriteByte(byte) Stream.CanTimeout Stream.ReadTimeout Stream.WriteTimeout MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.MemberwiseClone(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SharpSevenZip.Lzma Assembly: SharpSevenZip.dll Syntax public class LzmaEncodeStream : Stream, IAsyncDisposable, IDisposable Constructors | Edit this page View Source LzmaEncodeStream() Initializes a new instance of the LzmaEncodeStream class. Declaration public LzmaEncodeStream() | Edit this page View Source LzmaEncodeStream(Stream) Initializes a new instance of the LzmaEncodeStream class. Declaration public LzmaEncodeStream(Stream outputStream) Parameters Type Name Description Stream outputStream An output stream which supports writing. | Edit this page View Source LzmaEncodeStream(Stream, int) Initializes a new instance of the LzmaEncodeStream class. Declaration public LzmaEncodeStream(Stream outputStream, int bufferCapacity) Parameters Type Name Description Stream outputStream An output stream which supports writing. int bufferCapacity A buffer size. The bigger size, the better compression. | Edit this page View Source LzmaEncodeStream(int) Initializes a new instance of the LzmaEncodeStream class. Declaration public LzmaEncodeStream(int bufferCapacity) Parameters Type Name Description int bufferCapacity The buffer size. The bigger size, the better compression. Properties | Edit this page View Source CanRead Gets a value indicating whether the current stream supports reading. Declaration public override bool CanRead { get; } Property Value Type Description bool Overrides Stream.CanRead | Edit this page View Source CanSeek Gets a value indicating whether the current stream supports seeking. Declaration public override bool CanSeek { get; } Property Value Type Description bool Overrides Stream.CanSeek | Edit this page View Source CanWrite Gets a value indicating whether the current stream supports writing. Declaration public override bool CanWrite { get; } Property Value Type Description bool Overrides Stream.CanWrite | Edit this page View Source Length Gets the length in bytes of the output stream. Declaration public override long Length { get; } Property Value Type Description long Overrides Stream.Length | Edit this page View Source Position Gets or sets the position within the output stream. Declaration public override long Position { get; set; } Property Value Type Description long Overrides Stream.Position Methods | Edit this page View Source Dispose(bool) Releases all unmanaged resources used by LzmaEncodeStream. Declaration protected override void Dispose(bool disposing) Parameters Type Name Description bool disposing Overrides Stream.Dispose(bool) | Edit this page View Source Flush() Clears all buffers for this stream and causes any buffered data to be compressed and written. Declaration public override void Flush() Overrides Stream.Flush() | Edit this page View Source Read(byte[], int, int) Reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read. Declaration public override int Read(byte[] buffer, int offset, int count) Parameters Type Name Description byte[] buffer An array of bytes. int offset The zero-based byte offset in buffer at which to begin storing the data read from the current stream. int count The maximum number of bytes to be read from the current stream. Returns Type Description int The total number of bytes read into the buffer. Overrides Stream.Read(byte[], int, int) | Edit this page View Source Seek(long, SeekOrigin) Sets the position within the current stream. Declaration public override long Seek(long offset, SeekOrigin origin) Parameters Type Name Description long offset A byte offset relative to the origin parameter. SeekOrigin origin A value of type System.IO.SeekOrigin indicating the reference point used to obtain the new position. Returns Type Description long The new position within the current stream. Overrides Stream.Seek(long, SeekOrigin) | Edit this page View Source SetLength(long) Sets the length of the current stream. Declaration public override void SetLength(long value) Parameters Type Name Description long value The desired length of the current stream in bytes. Overrides Stream.SetLength(long) | Edit this page View Source ToDecodeStream() Converts the LzmaEncodeStream to the LzmaDecodeStream to read data. Declaration public LzmaDecodeStream ToDecodeStream() Returns Type Description LzmaDecodeStream | Edit this page View Source Write(byte[], int, int) Writes a sequence of bytes to the current stream and compresses it if necessary. Declaration public override void Write(byte[] buffer, int offset, int count) Parameters Type Name Description byte[] buffer An array of bytes. int offset The zero-based byte offset in buffer at which to begin storing the data read from the current stream. int count The maximum number of bytes to be read from the current stream. Overrides Stream.Write(byte[], int, int) Implements IAsyncDisposable IDisposable"
  },
  "api/SharpSevenZip.Lzma.html": {
    "href": "api/SharpSevenZip.Lzma.html",
    "title": "Namespace SharpSevenZip.Lzma",
    "keywords": "Namespace SharpSevenZip.Lzma Classes LzmaDecodeStream The stream which decompresses data with LZMA on the fly. LzmaEncodeStream The stream which compresses data with LZMA on the fly."
  },
  "api/SharpSevenZip.OperationResult.html": {
    "href": "api/SharpSevenZip.OperationResult.html",
    "title": "Enum OperationResult",
    "keywords": "Enum OperationResult Stores operation result values Namespace: SharpSevenZip Assembly: SharpSevenZip.dll Syntax public enum OperationResult Fields Name Description CrcError CrcError has occurred DataAfterEnd Data after end of archive DataError Data error has occurred HeadersError Archive headers error IsNotArc File is not archive Ok Success Unavailable File is unavailable UnexpectedEnd Unexpected end of file UnsupportedMethod Method is unsupported WrongPassword Wrong password"
  },
  "api/SharpSevenZip.OutArchiveFormat.html": {
    "href": "api/SharpSevenZip.OutArchiveFormat.html",
    "title": "Enum OutArchiveFormat",
    "keywords": "Enum OutArchiveFormat Writable archive format enumeration. Namespace: SharpSevenZip Assembly: SharpSevenZip.dll Syntax public enum OutArchiveFormat Fields Name Description BZip2 Open Bzip2 archive format. GZip Open Gzip archive format. SevenZip Open 7-zip archive format. Tar Open Tar archive format. Wim Microsoft Windows Imaging disk image format. XZ Open Xz archive format. Zip Open Zip archive format."
  },
  "api/SharpSevenZip.Sdk.CoderPropId.html": {
    "href": "api/SharpSevenZip.Sdk.CoderPropId.html",
    "title": "Enum CoderPropId",
    "keywords": "Enum CoderPropId Provides the fields that represent properties idenitifiers for compressing. Namespace: SharpSevenZip.Sdk Assembly: SharpSevenZip.dll Syntax public enum CoderPropId Fields Name Description Algorithm Specifies number of algorithm. BlockSize Specifies Block Size. DefaultProp Specifies default property. DictionarySize Specifies size of dictionary. EndMarker Specifies mode with end marker. LitContextBits Specifies number of literal context bits for LZMA (0 <= x <= 8). LitPosBits Specifies number of literal position bits for LZMA (0 <= x <= 4). MatchFinder Specifies match finder. LZMA: \"BT2\", \"BT4\" or \"BT4B\". MatchFinderCycles Specifies the number of match finder cyckes. NumFastBytes Specifies number of fast bytes for LZ*. NumPasses Specifies number of passes. NumThreads Specifies the number of threads. Order Specifies order for PPM methods. PosStateBits Specifies number of postion state bits for LZMA (0 <= x <= 4). UsedMemorySize Specifies size of memory for PPM*."
  },
  "api/SharpSevenZip.Sdk.Compression.Lzma.Decoder.html": {
    "href": "api/SharpSevenZip.Sdk.Compression.Lzma.Decoder.html",
    "title": "Class Decoder",
    "keywords": "Class Decoder The LZMA decoder class Inheritance object Decoder Implements ICoder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SharpSevenZip.Sdk.Compression.Lzma Assembly: SharpSevenZip.dll Syntax public class Decoder : ICoder Constructors | Edit this page View Source Decoder() Initializes the Lzma Decoder class. Declaration public Decoder() Methods | Edit this page View Source Code(Stream, Stream, long, long, ICodeProgress?) Codes a stream with LZMA algorithm to an output stream Declaration public void Code(Stream inStream, Stream outStream, long inSize, long outSize, ICodeProgress? progress) Parameters Type Name Description Stream inStream The input stream Stream outStream The output stream long inSize The input size long outSize The output size ICodeProgress progress Progress interface | Edit this page View Source SetDecoderProperties(byte[]) Sets decoder properties Declaration public void SetDecoderProperties(byte[] properties) Parameters Type Name Description byte[] properties Array of byte properties | Edit this page View Source Train(Stream) Trains a stream Declaration public bool Train(Stream stream) Parameters Type Name Description Stream stream The stream to train. Returns Type Description bool true if Ok; otherwise, false. Implements ICoder"
  },
  "api/SharpSevenZip.Sdk.Compression.Lzma.Encoder.html": {
    "href": "api/SharpSevenZip.Sdk.Compression.Lzma.Encoder.html",
    "title": "Class Encoder",
    "keywords": "Class Encoder The LZMA encoder class Inheritance object Encoder Implements ICoder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SharpSevenZip.Sdk.Compression.Lzma Assembly: SharpSevenZip.dll Syntax public class Encoder : ICoder Constructors | Edit this page View Source Encoder() Initializes a new instance of the Encoder class Declaration public Encoder() Methods | Edit this page View Source Code(Stream, Stream, long, long, ICodeProgress?) Codes the specified stream Declaration public void Code(Stream inStream, Stream outStream, long inSize, long outSize, ICodeProgress? progress) Parameters Type Name Description Stream inStream The input stream Stream outStream The output stream long inSize The input size long outSize The output size ICodeProgress progress The progress callback | Edit this page View Source SetCoderProperties(CoderPropId[], object[]) Sets the coder properties Declaration public void SetCoderProperties(CoderPropId[] propIDs, object[] properties) Parameters Type Name Description CoderPropId[] propIDs The property identificators object[] properties The array of properties | Edit this page View Source WriteCoderProperties(Stream) Writes the coder properties Declaration public void WriteCoderProperties(Stream outStream) Parameters Type Name Description Stream outStream The output stream to write the properties to. Implements ICoder"
  },
  "api/SharpSevenZip.Sdk.Compression.Lzma.html": {
    "href": "api/SharpSevenZip.Sdk.Compression.Lzma.html",
    "title": "Namespace SharpSevenZip.Sdk.Compression.Lzma",
    "keywords": "Namespace SharpSevenZip.Sdk.Compression.Lzma Classes Decoder The LZMA decoder class Encoder The LZMA encoder class"
  },
  "api/SharpSevenZip.Sdk.ICodeProgress.html": {
    "href": "api/SharpSevenZip.Sdk.ICodeProgress.html",
    "title": "Interface ICodeProgress",
    "keywords": "Interface ICodeProgress Callback progress interface. Namespace: SharpSevenZip.Sdk Assembly: SharpSevenZip.dll Syntax public interface ICodeProgress Methods | Edit this page View Source SetProgress(long, long) Callback progress. Declaration void SetProgress(long inSize, long outSize) Parameters Type Name Description long inSize Processed input size. -1 if unknown. long outSize Processed output size. -1 if unknown."
  },
  "api/SharpSevenZip.Sdk.ICoder.html": {
    "href": "api/SharpSevenZip.Sdk.ICoder.html",
    "title": "Interface ICoder",
    "keywords": "Interface ICoder Stream coder interface Namespace: SharpSevenZip.Sdk Assembly: SharpSevenZip.dll Syntax public interface ICoder Methods | Edit this page View Source Code(Stream, Stream, long, long, ICodeProgress) Codes streams. Declaration void Code(Stream inStream, Stream outStream, long inSize, long outSize, ICodeProgress progress) Parameters Type Name Description Stream inStream input Stream. Stream outStream output Stream. long inSize input Size. -1 if unknown. long outSize output Size. -1 if unknown. ICodeProgress progress callback progress reference. Exceptions Type Condition DataErrorException if input stream is not valid"
  },
  "api/SharpSevenZip.Sdk.html": {
    "href": "api/SharpSevenZip.Sdk.html",
    "title": "Namespace SharpSevenZip.Sdk",
    "keywords": "Namespace SharpSevenZip.Sdk Interfaces ICodeProgress Callback progress interface. ICoder Stream coder interface Enums CoderPropId Provides the fields that represent properties idenitifiers for compressing."
  },
  "api/SharpSevenZip.SfxModule.html": {
    "href": "api/SharpSevenZip.SfxModule.html",
    "title": "Enum SfxModule",
    "keywords": "Enum SfxModule Sfx module choice enumeration Namespace: SharpSevenZip Assembly: SharpSevenZip.dll Syntax public enum SfxModule Fields Name Description Custom The custom sfx module. First you must specify the module file name. Default Default module (leave this if unsure) Extended The extended installer sfx module by Oleg Scherbakov Installer The installer sfx module by Igor Pavlov Simple The simple sfx module by Igor Pavlov with no adjustable parameters"
  },
  "api/SharpSevenZip.SharpSevenZipArchiveFormat.html": {
    "href": "api/SharpSevenZip.SharpSevenZipArchiveFormat.html",
    "title": "Class SharpSevenZipArchiveFormat",
    "keywords": "Class SharpSevenZipArchiveFormat Check the format of archives. Inheritance object SharpSevenZipArchiveFormat Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SharpSevenZip Assembly: SharpSevenZip.dll Syntax public static class SharpSevenZipArchiveFormat Methods | Edit this page View Source CheckFormat(Stream) Gets the InArchiveFormat for a specific extension. Declaration public static InArchiveFormat CheckFormat(Stream stream) Parameters Type Name Description Stream stream The stream to identify. Returns Type Description InArchiveFormat Corresponding InArchiveFormat. | Edit this page View Source CheckFormat(Stream, out int, out bool) Gets the InArchiveFormat for a specific extension. Declaration public static InArchiveFormat CheckFormat(Stream stream, out int offset, out bool isExecutable) Parameters Type Name Description Stream stream The stream to identify. int offset The archive beginning offset. bool isExecutable True if the original format of the stream is PE; otherwise, false. Returns Type Description InArchiveFormat Corresponding InArchiveFormat. | Edit this page View Source CheckFormat(string) Gets the InArchiveFormat for a specific file name. Declaration public static InArchiveFormat CheckFormat(string fileName) Parameters Type Name Description string fileName The archive file name. Returns Type Description InArchiveFormat Corresponding InArchiveFormat. Exceptions Type Condition ArgumentException | Edit this page View Source CheckFormat(string, out int, out bool) Gets the InArchiveFormat for a specific file name. Declaration public static InArchiveFormat CheckFormat(string fileName, out int offset, out bool isExecutable) Parameters Type Name Description string fileName The archive file name. int offset The archive beginning offset. bool isExecutable True if the original format of the file is PE; otherwise, false. Returns Type Description InArchiveFormat Corresponding InArchiveFormat. Exceptions Type Condition ArgumentException"
  },
  "api/SharpSevenZip.SharpSevenZipBase.html": {
    "href": "api/SharpSevenZip.SharpSevenZipBase.html",
    "title": "Class SharpSevenZipBase",
    "keywords": "Class SharpSevenZipBase SharpSevenZip Extractor/Compressor base class. Implements Password string, ReportErrors flag. Inheritance object MarshalByRefObject SharpSevenZipBase SharpSevenZipCompressor SharpSevenZipExtractor Inherited Members MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.MemberwiseClone(bool) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: SharpSevenZip Assembly: SharpSevenZip.dll Syntax public abstract class SharpSevenZipBase : MarshalByRefObject Constructors | Edit this page View Source SharpSevenZipBase(string) Initializes a new instance of the SharpSevenZipBase class. Declaration protected SharpSevenZipBase(string password = \"\") Parameters Type Name Description string password The archive password. Fields | Edit this page View Source NeedsToBeRecreated True if the instance of the class needs to be recreated in new thread context; otherwise, false. Declaration protected bool NeedsToBeRecreated Field Value Type Description bool Properties | Edit this page View Source CurrentLibraryFeatures Gets the current library features. Declaration [CLSCompliant(false)] public static LibraryFeature CurrentLibraryFeatures { get; } Property Value Type Description LibraryFeature | Edit this page View Source EventSynchronization Gets or sets the event synchronization strategy. Declaration public EventSynchronizationStrategy EventSynchronization { get; set; } Property Value Type Description EventSynchronizationStrategy | Edit this page View Source Password Gets or sets the archive password Declaration public string Password { get; protected set; } Property Value Type Description string | Edit this page View Source UniqueID Gets the unique identifier of this SharpSevenZipBase instance. Declaration public int UniqueID { get; } Property Value Type Description int Methods | Edit this page View Source Equals(object?) Determines whether the specified System.Object is equal to the current SharpSevenZipBase. Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj The System.Object to compare with the current SharpSevenZipBase. Returns Type Description bool true if the specified System.Object is equal to the current SharpSevenZipBase; otherwise, false. Overrides object.Equals(object) | Edit this page View Source GetHashCode() Serves as a hash function for a particular type. Declaration public override int GetHashCode() Returns Type Description int A hash code for the current SharpSevenZipBase. Overrides object.GetHashCode() | Edit this page View Source SetLibraryPath(string) Changes the path to the 7-zip native library. Declaration public static void SetLibraryPath(string libraryPath) Parameters Type Name Description string libraryPath The path to the 7-zip native library. | Edit this page View Source ToString() Returns a System.String that represents the current SharpSevenZipBase. Declaration public override string ToString() Returns Type Description string A System.String that represents the current SharpSevenZipBase. Overrides object.ToString()"
  },
  "api/SharpSevenZip.SharpSevenZipCompressor.html": {
    "href": "api/SharpSevenZip.SharpSevenZipCompressor.html",
    "title": "Class SharpSevenZipCompressor",
    "keywords": "Class SharpSevenZipCompressor Class to pack data into archives supported by 7-Zip. Inheritance object MarshalByRefObject SharpSevenZipBase SharpSevenZipCompressor Inherited Members SharpSevenZipBase.EventSynchronization SharpSevenZipBase.UniqueID SharpSevenZipBase.Password SharpSevenZipBase.SetLibraryPath(string) SharpSevenZipBase.CurrentLibraryFeatures SharpSevenZipBase.Equals(object) SharpSevenZipBase.GetHashCode() SharpSevenZipBase.ToString() MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: SharpSevenZip Assembly: SharpSevenZip.dll Syntax public sealed class SharpSevenZipCompressor : SharpSevenZipBase Examples var compr = new SharpSevenZipCompressor(); compr.CompressDirectory(@\"C:\\Dir\", @\"C:\\Archive.7z\"); Constructors | Edit this page View Source SharpSevenZipCompressor() Initializes a new instance of the SharpSevenZipCompressor class. Declaration public SharpSevenZipCompressor() | Edit this page View Source SharpSevenZipCompressor(string) Initializes a new instance of the SharpSevenZipCompressor class. Declaration public SharpSevenZipCompressor(string temporaryPath) Parameters Type Name Description string temporaryPath Your own temporary path (default is set in the parameterless constructor overload.) Properties | Edit this page View Source ArchiveFormat Gets or sets the archive format Declaration public OutArchiveFormat ArchiveFormat { get; set; } Property Value Type Description OutArchiveFormat | Edit this page View Source CompressionLevel Gets or sets the archiving compression level. Declaration public CompressionLevel CompressionLevel { get; set; } Property Value Type Description CompressionLevel | Edit this page View Source CompressionMethod Gets or sets the compression method Declaration public CompressionMethod CompressionMethod { get; set; } Property Value Type Description CompressionMethod | Edit this page View Source CompressionMode Gets or sets the compression mode. Declaration public CompressionMode CompressionMode { get; set; } Property Value Type Description CompressionMode | Edit this page View Source CustomParameters Gets the custom compression parameters - for advanced users only. Declaration public Dictionary<string, string> CustomParameters { get; } Property Value Type Description Dictionary<string, string> | Edit this page View Source DefaultItemName Gets or sets the default archive item name used when an item to be compressed has no name, for example, when you compress a MemoryStream instance. Declaration public string? DefaultItemName { get; set; } Property Value Type Description string | Edit this page View Source DirectoryStructure Gets or sets the value indicating whether to preserve the directory structure. Declaration public bool DirectoryStructure { get; set; } Property Value Type Description bool | Edit this page View Source EncryptHeaders Gets or sets the value indicating whether to encrypt 7-Zip archive headers. Declaration public bool EncryptHeaders { get; set; } Property Value Type Description bool | Edit this page View Source FastCompression Gets or sets the value indicating whether to compress as fast as possible, without calling events. Declaration public bool FastCompression { get; set; } Property Value Type Description bool | Edit this page View Source IncludeEmptyDirectories Gets or sets the value indicating whether to include empty directories to archives. Default is true. Declaration public bool IncludeEmptyDirectories { get; set; } Property Value Type Description bool | Edit this page View Source LzmaDictionarySize Gets or sets the dictionary size for the managed LZMA algorithm. Declaration public static int LzmaDictionarySize { get; set; } Property Value Type Description int | Edit this page View Source PreserveDirectoryRoot Gets or sets the value indicating whether to preserve the directory root for CompressDirectory. Declaration public bool PreserveDirectoryRoot { get; set; } Property Value Type Description bool | Edit this page View Source ScanOnlyWritable Gets or sets the value indicating whether to compress files only open for writing. Declaration public bool ScanOnlyWritable { get; set; } Property Value Type Description bool | Edit this page View Source TempFolderPath Gets or sets the temporary folder path. Declaration public string? TempFolderPath { get; set; } Property Value Type Description string | Edit this page View Source VolumeSize Gets or sets the size in bytes of an archive volume (0 for no volumes). Declaration public long VolumeSize { get; set; } Property Value Type Description long | Edit this page View Source ZipEncryptionMethod Gets or sets the encryption method for zip archives. Declaration public ZipEncryptionMethod ZipEncryptionMethod { get; set; } Property Value Type Description ZipEncryptionMethod Methods | Edit this page View Source BeginCompressDirectory(string, Stream, string, string, bool) Packs all files in the specified directory asynchronously. Declaration public void BeginCompressDirectory(string directory, Stream archiveStream, string password, string searchPattern = \"*\", bool recursion = true) Parameters Type Name Description string directory The directory to compress. Stream archiveStream The archive output stream. Use CompressDirectory( ... string archiveName ... ) overloads for archiving to disk. string password The archive password. string searchPattern Search string, such as \"*.txt\". bool recursion If true, files will be searched for recursively; otherwise, not. | Edit this page View Source BeginCompressDirectory(string, string, string, string, bool) Packs all files in the specified directory asynchronously. Declaration public void BeginCompressDirectory(string directory, string archiveName, string password = \"\", string searchPattern = \"*\", bool recursion = true) Parameters Type Name Description string directory The directory to compress. string archiveName The archive file name. string password The archive password. string searchPattern Search string, such as \"*.txt\". bool recursion If true, files will be searched for recursively; otherwise, not. | Edit this page View Source BeginCompressFiles(Stream, int, params string[]) Packs files into the archive asynchronously. Declaration public void BeginCompressFiles(Stream archiveStream, int commonRootLength, params string[] fileFullNames) Parameters Type Name Description Stream archiveStream The archive output stream. Use CompressFiles(string archiveName, ... ) overloads for archiving to disk. int commonRootLength The length of the common root of the file names. string[] fileFullNames Array of file names to pack. | Edit this page View Source BeginCompressFiles(Stream, params string[]) Packs files into the archive asynchronously. Declaration public void BeginCompressFiles(Stream archiveStream, params string[] fileFullNames) Parameters Type Name Description Stream archiveStream The archive output stream. Use CompressFiles(string archiveName ... ) overloads for archiving to disk. string[] fileFullNames Array of file names to pack. | Edit this page View Source BeginCompressFiles(string, int, params string[]) Packs files into the archive asynchronously. Declaration public void BeginCompressFiles(string archiveName, int commonRootLength, params string[] fileFullNames) Parameters Type Name Description string archiveName The archive file name. int commonRootLength The length of the common root of the file names. string[] fileFullNames Array of file names to pack. | Edit this page View Source BeginCompressFiles(string, params string[]) Packs files into the archive asynchronously. Declaration public void BeginCompressFiles(string archiveName, params string[] fileFullNames) Parameters Type Name Description string archiveName The archive file name. string[] fileFullNames Array of file names to pack. | Edit this page View Source BeginCompressFilesEncrypted(Stream, int, string, params string[]) Packs files into the archive asynchronously. Declaration public void BeginCompressFilesEncrypted(Stream archiveStream, int commonRootLength, string password, params string[] fileFullNames) Parameters Type Name Description Stream archiveStream The archive output stream. Use CompressFiles( ... string archiveName ... ) overloads for archiving to disk. int commonRootLength The length of the common root of the file names. string password The archive password. string[] fileFullNames Array of file names to pack. | Edit this page View Source BeginCompressFilesEncrypted(Stream, string, params string[]) Packs files into the archive asynchronously. Declaration public void BeginCompressFilesEncrypted(Stream archiveStream, string password, params string[] fileFullNames) Parameters Type Name Description Stream archiveStream The archive output stream. Use CompressFiles( ... string archiveName ... ) overloads for archiving to disk. string password The archive password. string[] fileFullNames Array of file names to pack. | Edit this page View Source BeginCompressFilesEncrypted(string, int, string, params string[]) Packs files into the archive asynchronously. Declaration public void BeginCompressFilesEncrypted(string archiveName, int commonRootLength, string password, params string[] fileFullNames) Parameters Type Name Description string archiveName The archive file name int commonRootLength The length of the common root of the file names. string password The archive password. string[] fileFullNames Array of file names to pack. | Edit this page View Source BeginCompressFilesEncrypted(string, string, params string[]) Packs files into the archive asynchronously. Declaration public void BeginCompressFilesEncrypted(string archiveName, string password, params string[] fileFullNames) Parameters Type Name Description string archiveName The archive file name string password The archive password. string[] fileFullNames Array of file names to pack. | Edit this page View Source BeginCompressStream(Stream, Stream, string) Compresses the specified stream. Declaration public void BeginCompressStream(Stream inStream, Stream outStream, string password = \"\") Parameters Type Name Description Stream inStream The source uncompressed stream. Stream outStream The destination compressed stream. string password The archive password. Exceptions Type Condition ArgumentException ArgumentException: at least one of the specified streams is invalid. | Edit this page View Source BeginModifyArchive(string, IDictionary<int, string?>?, string) Modifies the existing archive asynchronously (renames files or deletes them). Declaration public void BeginModifyArchive(string archiveName, IDictionary<int, string?>? newFileNames, string password = \"\") Parameters Type Name Description string archiveName The archive file name. IDictionary<int, string> newFileNames New file names. Null value to delete the corresponding index. string password The archive password. | Edit this page View Source CompressBytes(byte[]) Compresses byte array with LZMA algorithm (C# inside) Declaration public static byte[] CompressBytes(byte[] data) Parameters Type Name Description byte[] data Byte array to compress Returns Type Description byte[] Compressed byte array | Edit this page View Source CompressDirectory(string, Stream, string, string, bool) Packs all files in the specified directory. Declaration public void CompressDirectory(string directory, Stream archiveStream, string password = \"\", string searchPattern = \"*\", bool recursion = true) Parameters Type Name Description string directory The directory to compress. Stream archiveStream The archive output stream. Use CompressDirectory( ... string archiveName ... ) overloads for archiving to disk. string password The archive password. string searchPattern Search string, such as \"*.txt\". bool recursion If true, files will be searched for recursively; otherwise, not. | Edit this page View Source CompressDirectory(string, string, string, string, bool) Packs all files in the specified directory. Declaration public void CompressDirectory(string directory, string archiveName, string password = \"\", string searchPattern = \"*\", bool recursion = true) Parameters Type Name Description string directory The directory to compress. string archiveName The archive file name. string password The archive password. string searchPattern Search string, such as \"*.txt\". bool recursion If true, files will be searched for recursively; otherwise, not. | Edit this page View Source CompressDirectoryAsync(string, Stream, string, string, bool) Packs all files in the specified directory asynchronously. Declaration public Task CompressDirectoryAsync(string directory, Stream archiveStream, string password, string searchPattern = \"*\", bool recursion = true) Parameters Type Name Description string directory The directory to compress. Stream archiveStream The archive output stream. Use CompressDirectory( ... string archiveName ... ) overloads for archiving to disk. string password The archive password. string searchPattern Search string, such as \"*.txt\". bool recursion If true, files will be searched for recursively; otherwise, not. Returns Type Description Task | Edit this page View Source CompressDirectoryAsync(string, string, string, string, bool) Packs all files in the specified directory asynchronously. Declaration public Task CompressDirectoryAsync(string directory, string archiveName, string password = \"\", string searchPattern = \"*\", bool recursion = true) Parameters Type Name Description string directory The directory to compress. string archiveName The archive file name. string password The archive password. string searchPattern Search string, such as \"*.txt\". bool recursion If true, files will be searched for recursively; otherwise, not. Returns Type Description Task | Edit this page View Source CompressFileDictionary(IDictionary<string, string>, Stream, string) Packs the specified file dictionary. Declaration public void CompressFileDictionary(IDictionary<string, string> fileDictionary, Stream archiveStream, string password = \"\") Parameters Type Name Description IDictionary<string, string> fileDictionary Dictionary<name of the archive entry, file name>. If a file name is null, the corresponding archive entry becomes a directory. Stream archiveStream The archive output stream. Use CompressStreamDictionary( ... string archiveName ... ) overloads for archiving to disk. string password The archive password. | Edit this page View Source CompressFileDictionary(IDictionary<string, string>, string, string) Packs the specified file dictionary. Declaration public void CompressFileDictionary(IDictionary<string, string> fileDictionary, string archiveName, string password = \"\") Parameters Type Name Description IDictionary<string, string> fileDictionary Dictionary<name of the archive entry, file name>. If a file name is null, the corresponding archive entry becomes a directory. string archiveName The archive file name. string password The archive password. | Edit this page View Source CompressFiles(Stream, int, params string[]) Packs files into the archive. Declaration public void CompressFiles(Stream archiveStream, int commonRootLength, params string[] fileFullNames) Parameters Type Name Description Stream archiveStream The archive output stream. Use CompressFiles(string archiveName, ... ) overloads for archiving to disk. int commonRootLength The length of the common root of the file names. string[] fileFullNames Array of file names to pack. | Edit this page View Source CompressFiles(Stream, params string[]) Packs files into the archive. Declaration public void CompressFiles(Stream archiveStream, params string[] fileFullNames) Parameters Type Name Description Stream archiveStream The archive output stream. Use CompressFiles(string archiveName ... ) overloads for archiving to disk. string[] fileFullNames Array of file names to pack. | Edit this page View Source CompressFiles(string, int, params string[]) Packs files into the archive. Declaration public void CompressFiles(string archiveName, int commonRootLength, params string[] fileFullNames) Parameters Type Name Description string archiveName The archive file name. int commonRootLength The length of the common root of the file names. string[] fileFullNames Array of file names to pack. | Edit this page View Source CompressFiles(string, params string[]) Packs files into the archive. Declaration public void CompressFiles(string archiveName, params string[] fileFullNames) Parameters Type Name Description string archiveName The archive file name. string[] fileFullNames Array of file names to pack. | Edit this page View Source CompressFilesAsync(Stream, int, params string[]) Packs files into the archive asynchronously. Declaration public Task CompressFilesAsync(Stream archiveStream, int commonRootLength, params string[] fileFullNames) Parameters Type Name Description Stream archiveStream The archive output stream. Use CompressFiles(string archiveName, ... ) overloads for archiving to disk. int commonRootLength The length of the common root of the file names. string[] fileFullNames Array of file names to pack. Returns Type Description Task | Edit this page View Source CompressFilesAsync(Stream, params string[]) Packs files into the archive asynchronously. Declaration public Task CompressFilesAsync(Stream archiveStream, params string[] fileFullNames) Parameters Type Name Description Stream archiveStream The archive output stream. Use CompressFiles(string archiveName ... ) overloads for archiving to disk. string[] fileFullNames Array of file names to pack. Returns Type Description Task | Edit this page View Source CompressFilesAsync(string, int, params string[]) Packs files into the archive asynchronously. Declaration public Task CompressFilesAsync(string archiveName, int commonRootLength, params string[] fileFullNames) Parameters Type Name Description string archiveName The archive file name. int commonRootLength The length of the common root of the file names. string[] fileFullNames Array of file names to pack. Returns Type Description Task | Edit this page View Source CompressFilesAsync(string, params string[]) Packs files into the archive asynchronously. Declaration public Task CompressFilesAsync(string archiveName, params string[] fileFullNames) Parameters Type Name Description string archiveName The archive file name. string[] fileFullNames Array of file names to pack. Returns Type Description Task | Edit this page View Source CompressFilesEncrypted(Stream, int, string, params string[]) Packs files into the archive. Declaration public void CompressFilesEncrypted(Stream archiveStream, int commonRootLength, string password, params string[] fileFullNames) Parameters Type Name Description Stream archiveStream The archive output stream. Use CompressFiles( ... string archiveName ... ) overloads for archiving to disk. int commonRootLength The length of the common root of the file names. string password The archive password. string[] fileFullNames Array of file names to pack. | Edit this page View Source CompressFilesEncrypted(Stream, string, params string[]) Packs files into the archive. Declaration public void CompressFilesEncrypted(Stream archiveStream, string password, params string[] fileFullNames) Parameters Type Name Description Stream archiveStream The archive output stream. Use CompressFiles( ... string archiveName ... ) overloads for archiving to disk. string password The archive password. string[] fileFullNames Array of file names to pack. | Edit this page View Source CompressFilesEncrypted(string, int, string, params string[]) Packs files into the archive. Declaration public void CompressFilesEncrypted(string archiveName, int commonRootLength, string password, params string[] fileFullNames) Parameters Type Name Description string archiveName The archive file name. int commonRootLength The length of the common root of the file names. string password The archive password. string[] fileFullNames Array of file names to pack. | Edit this page View Source CompressFilesEncrypted(string, string, params string[]) Packs files into the archive. Declaration public void CompressFilesEncrypted(string archiveName, string password, params string[] fileFullNames) Parameters Type Name Description string archiveName The archive file name. string password The archive password. string[] fileFullNames Array of file names to pack. | Edit this page View Source CompressFilesEncryptedAsync(Stream, int, string, params string[]) Packs files into the archive asynchronously. Declaration public Task CompressFilesEncryptedAsync(Stream archiveStream, int commonRootLength, string password, params string[] fileFullNames) Parameters Type Name Description Stream archiveStream The archive output stream. Use CompressFiles( ... string archiveName ... ) overloads for archiving to disk. int commonRootLength The length of the common root of the file names. string password The archive password. string[] fileFullNames Array of file names to pack. Returns Type Description Task | Edit this page View Source CompressFilesEncryptedAsync(Stream, string, params string[]) Packs files into the archive asynchronously. Declaration public Task CompressFilesEncryptedAsync(Stream archiveStream, string password, params string[] fileFullNames) Parameters Type Name Description Stream archiveStream The archive output stream. Use CompressFiles( ... string archiveName ... ) overloads for archiving to disk. string password The archive password. string[] fileFullNames Array of file names to pack. Returns Type Description Task | Edit this page View Source CompressFilesEncryptedAsync(string, int, string, params string[]) Packs files into the archive asynchronously. Declaration public Task CompressFilesEncryptedAsync(string archiveName, int commonRootLength, string password, params string[] fileFullNames) Parameters Type Name Description string archiveName The archive file name int commonRootLength The length of the common root of the file names. string password The archive password. string[] fileFullNames Array of file names to pack. Returns Type Description Task | Edit this page View Source CompressFilesEncryptedAsync(string, string, params string[]) Packs files into the archive asynchronously. Declaration public Task CompressFilesEncryptedAsync(string archiveName, string password, params string[] fileFullNames) Parameters Type Name Description string archiveName The archive file name string password The archive password. string[] fileFullNames Array of file names to pack. Returns Type Description Task | Edit this page View Source CompressStream(Stream, Stream, int?, EventHandler<ProgressEventArgs>) Compresses the specified stream with LZMA algorithm (C# inside) Declaration public static void CompressStream(Stream inStream, Stream outStream, int? inLength, EventHandler<ProgressEventArgs> codeProgressEvent) Parameters Type Name Description Stream inStream The source uncompressed stream Stream outStream The destination compressed stream int? inLength The length of uncompressed data (null for inStream.Length) EventHandler<ProgressEventArgs> codeProgressEvent The event for handling the code progress | Edit this page View Source CompressStream(Stream, Stream, string) Compresses the specified stream. Declaration public void CompressStream(Stream inStream, Stream outStream, string password = \"\") Parameters Type Name Description Stream inStream The source uncompressed stream. Stream outStream The destination compressed stream. string password The archive password. Exceptions Type Condition ArgumentException ArgumentException: at least one of the specified streams is invalid. | Edit this page View Source CompressStreamAsync(Stream, Stream, string) Compresses the specified stream. Declaration public Task CompressStreamAsync(Stream inStream, Stream outStream, string password = \"\") Parameters Type Name Description Stream inStream The source uncompressed stream. Stream outStream The destination compressed stream. string password The archive password. Returns Type Description Task Exceptions Type Condition ArgumentException ArgumentException: at least one of the specified streams is invalid. | Edit this page View Source CompressStreamDictionary(IDictionary<string, Stream>, Stream, string) Packs the specified stream dictionary. Declaration public void CompressStreamDictionary(IDictionary<string, Stream> streamDictionary, Stream archiveStream, string password = \"\") Parameters Type Name Description IDictionary<string, Stream> streamDictionary Dictionary<name of the archive entry, stream>. If a stream is null, the corresponding string becomes a directory name. Stream archiveStream The archive output stream. Use CompressStreamDictionary( ... string archiveName ... ) overloads for archiving to disk. string password The archive password. | Edit this page View Source CompressStreamDictionary(IDictionary<string, Stream>, string, string) Packs the specified stream dictionary. Declaration public void CompressStreamDictionary(IDictionary<string, Stream> streamDictionary, string archiveName, string password = \"\") Parameters Type Name Description IDictionary<string, Stream> streamDictionary Dictionary<name of the archive entry, stream>. If a stream is null, the corresponding string becomes a directory name. string archiveName The archive file name. string password The archive password. | Edit this page View Source ModifyArchive(string, IDictionary<int, string?>?, string) Modifies the existing archive (renames files or deletes them). Declaration public void ModifyArchive(string archiveName, IDictionary<int, string?>? newFileNames, string password = \"\") Parameters Type Name Description string archiveName The archive file name. IDictionary<int, string> newFileNames New file names. Null value to delete the corresponding index. string password The archive password. | Edit this page View Source ModifyArchiveAsync(string, IDictionary<int, string?>?, string) Modifies the existing archive asynchronously (renames files or deletes them). Declaration public Task ModifyArchiveAsync(string archiveName, IDictionary<int, string?>? newFileNames, string password = \"\") Parameters Type Name Description string archiveName The archive file name. IDictionary<int, string> newFileNames New file names. Null value to delete the corresponding index. string password The archive password. Returns Type Description Task Events | Edit this page View Source Compressing Occurs when data are being compressed Declaration public event EventHandler<ProgressEventArgs>? Compressing Event Type Type Description EventHandler<ProgressEventArgs> Remarks Use this event for accurate progress handling and various ProgressBar.StepBy(e.PercentDelta) routines | Edit this page View Source CompressionFinished Occurs when the compression procedure is finished Declaration public event EventHandler<EventArgs>? CompressionFinished Event Type Type Description EventHandler<EventArgs> | Edit this page View Source FileCompressionFinished Occurs when the current file was compressed. Declaration public event EventHandler<EventArgs>? FileCompressionFinished Event Type Type Description EventHandler<EventArgs> | Edit this page View Source FileCompressionStarted Occurs when the next file is going to be packed. Declaration public event EventHandler<FileNameEventArgs>? FileCompressionStarted Event Type Type Description EventHandler<FileNameEventArgs> Remarks Occurs when 7-zip engine requests for an input stream for the next file to pack it | Edit this page View Source FilesFound Occurs when all files information was determined and SharpSevenZipCompressor is about to start to compress them. Declaration public event EventHandler<IntEventArgs>? FilesFound Event Type Type Description EventHandler<IntEventArgs> Remarks The incoming int value indicates the number of scanned files."
  },
  "api/SharpSevenZip.SharpSevenZipExtractor.html": {
    "href": "api/SharpSevenZip.SharpSevenZipExtractor.html",
    "title": "Class SharpSevenZipExtractor",
    "keywords": "Class SharpSevenZipExtractor Class to unpack data from archives supported by 7-Zip. Inheritance object MarshalByRefObject SharpSevenZipBase SharpSevenZipExtractor Implements IDisposable Inherited Members SharpSevenZipBase.EventSynchronization SharpSevenZipBase.UniqueID SharpSevenZipBase.Password SharpSevenZipBase.SetLibraryPath(string) SharpSevenZipBase.CurrentLibraryFeatures SharpSevenZipBase.Equals(object) SharpSevenZipBase.GetHashCode() SharpSevenZipBase.ToString() MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: SharpSevenZip Assembly: SharpSevenZip.dll Syntax public sealed class SharpSevenZipExtractor : SharpSevenZipBase, IDisposable Examples using (var extr = new SharpSevenZipExtractor(@\"C:\\Test.7z\")) { extr.ExtractArchive(@\"C:\\TestDirectory\"); } Constructors | Edit this page View Source SharpSevenZipExtractor(Stream) Initializes a new instance of SharpSevenZipExtractor class. Declaration public SharpSevenZipExtractor(Stream archiveStream) Parameters Type Name Description Stream archiveStream The stream to read the archive from. Use SharpSevenZipExtractor(string) to extract from disk, though it is not necessary. Remarks The archive format is guessed by the signature. | Edit this page View Source SharpSevenZipExtractor(Stream, bool) Initializes a new instance of SharpSevenZipExtractor class. Declaration public SharpSevenZipExtractor(Stream archiveStream, bool leaveOpen) Parameters Type Name Description Stream archiveStream The stream to read the archive from. Use SharpSevenZipExtractor(string) to extract from disk, though it is not necessary. bool leaveOpen Leaves the base stream open. Remarks The archive format is guessed by the signature. | Edit this page View Source SharpSevenZipExtractor(Stream, bool, InArchiveFormat) Initializes a new instance of SharpSevenZipExtractor class. Declaration public SharpSevenZipExtractor(Stream archiveStream, bool leaveOpen, InArchiveFormat format) Parameters Type Name Description Stream archiveStream The stream to read the archive from. Use SharpSevenZipExtractor(string) to extract from disk, though it is not necessary. bool leaveOpen Leaves the base stream open. InArchiveFormat format Manual archive format setup. You SHOULD NOT normally specify it this way. Instead, use SharpSevenZipExtractor(Stream archiveStream), that constructor automatically detects the archive format. | Edit this page View Source SharpSevenZipExtractor(Stream, string) Initializes a new instance of SharpSevenZipExtractor class. Declaration public SharpSevenZipExtractor(Stream archiveStream, string password) Parameters Type Name Description Stream archiveStream The stream to read the archive from. string password Password for an encrypted archive. Remarks The archive format is guessed by the signature. | Edit this page View Source SharpSevenZipExtractor(Stream, string, bool) Initializes a new instance of SharpSevenZipExtractor class. Declaration public SharpSevenZipExtractor(Stream archiveStream, string password, bool leaveOpen) Parameters Type Name Description Stream archiveStream The stream to read the archive from. string password Password for an encrypted archive. bool leaveOpen Leaves the base stream open. Remarks The archive format is guessed by the signature. | Edit this page View Source SharpSevenZipExtractor(Stream, string, bool, InArchiveFormat) Initializes a new instance of SharpSevenZipExtractor class. Declaration public SharpSevenZipExtractor(Stream archiveStream, string password, bool leaveOpen, InArchiveFormat format) Parameters Type Name Description Stream archiveStream The stream to read the archive from. string password Password for an encrypted archive. bool leaveOpen Leaves the base stream open. InArchiveFormat format Manual archive format setup. You SHOULD NOT normally specify it this way. Instead, use SharpSevenZipExtractor(Stream archiveStream, string password), that constructor automatically detects the archive format. | Edit this page View Source SharpSevenZipExtractor(string) Initializes a new instance of SharpSevenZipExtractor class. Declaration public SharpSevenZipExtractor(string archiveFullName) Parameters Type Name Description string archiveFullName The archive full file name. | Edit this page View Source SharpSevenZipExtractor(string, InArchiveFormat) Initializes a new instance of SharpSevenZipExtractor class. Declaration public SharpSevenZipExtractor(string archiveFullName, InArchiveFormat format) Parameters Type Name Description string archiveFullName The archive full file name. InArchiveFormat format Manual archive format setup. You SHOULD NOT normally specify it this way. Instead, use SharpSevenZipExtractor(string archiveFullName), that constructor automatically detects the archive format. | Edit this page View Source SharpSevenZipExtractor(string, string) Initializes a new instance of SharpSevenZipExtractor class. Declaration public SharpSevenZipExtractor(string archiveFullName, string password) Parameters Type Name Description string archiveFullName The archive full file name. string password Password for an encrypted archive. | Edit this page View Source SharpSevenZipExtractor(string, string, InArchiveFormat) Initializes a new instance of SharpSevenZipExtractor class. Declaration public SharpSevenZipExtractor(string archiveFullName, string password, InArchiveFormat format) Parameters Type Name Description string archiveFullName The archive full file name. string password Password for an encrypted archive. InArchiveFormat format Manual archive format setup. You SHOULD NOT normally specify it this way. Instead, use SharpSevenZipExtractor(string archiveFullName, string password), that constructor automatically detects the archive format. Properties | Edit this page View Source ArchiveFileData Gets the collection of ArchiveFileInfo with all information about files in the archive Declaration public ReadOnlyCollection<ArchiveFileInfo> ArchiveFileData { get; } Property Value Type Description ReadOnlyCollection<ArchiveFileInfo> | Edit this page View Source ArchiveFileNames Gets the collection of all file names contained in the archive. Declaration public ReadOnlyCollection<string> ArchiveFileNames { get; } Property Value Type Description ReadOnlyCollection<string> Remarks Each get recreates the collection | Edit this page View Source ArchiveProperties Gets the properties for the current archive Declaration public ReadOnlyCollection<ArchiveProperty> ArchiveProperties { get; } Property Value Type Description ReadOnlyCollection<ArchiveProperty> | Edit this page View Source FileName Gets or sets archive full file name Declaration public string? FileName { get; } Property Value Type Description string | Edit this page View Source FilesCount Gets the number of files in the archive Declaration [CLSCompliant(false)] public uint FilesCount { get; } Property Value Type Description uint | Edit this page View Source Format Gets archive format Declaration public InArchiveFormat Format { get; } Property Value Type Description InArchiveFormat | Edit this page View Source IsSolid Gets a value indicating whether the archive is solid Declaration public bool IsSolid { get; } Property Value Type Description bool | Edit this page View Source PackedSize Gets the size of the archive file Declaration public long PackedSize { get; } Property Value Type Description long | Edit this page View Source PreserveDirectoryStructure Gets or sets the value indicating whether to preserve the directory structure of extracted files. Declaration public bool PreserveDirectoryStructure { get; set; } Property Value Type Description bool | Edit this page View Source UnpackedSize Gets the size of unpacked archive data Declaration public long UnpackedSize { get; } Property Value Type Description long | Edit this page View Source VolumeFileNames Gets the list of archive volume file names. Declaration public ReadOnlyCollection<string> VolumeFileNames { get; } Property Value Type Description ReadOnlyCollection<string> Methods | Edit this page View Source BeginExtractArchive(string) Unpacks the whole archive asynchronously to the specified directory name at the specified priority. Declaration public void BeginExtractArchive(string directory) Parameters Type Name Description string directory The directory where the files are to be unpacked. | Edit this page View Source BeginExtractFile(int, Stream) Unpacks the file asynchronously by its index to the specified stream. Declaration public void BeginExtractFile(int index, Stream stream) Parameters Type Name Description int index Index in the archive file table. Stream stream The stream where the file is to be unpacked. | Edit this page View Source BeginExtractFile(string, Stream) Unpacks the file asynchronously by its name to the specified stream. Declaration public void BeginExtractFile(string fileName, Stream stream) Parameters Type Name Description string fileName The file full name in the archive file table. Stream stream The stream where the file is to be unpacked. | Edit this page View Source BeginExtractFiles(ExtractFileCallback) Extracts files from the archive asynchronously, giving a callback the choice what to do with each file. The order of the files is given by the archive. 7-Zip (and any other solid) archives are NOT supported. Declaration public void BeginExtractFiles(ExtractFileCallback extractFileCallback) Parameters Type Name Description ExtractFileCallback extractFileCallback The callback to call for each file in the archive. | Edit this page View Source BeginExtractFiles(string, params int[]) Unpacks files asynchronously by their indices to the specified directory. Declaration public void BeginExtractFiles(string directory, params int[] indexes) Parameters Type Name Description string directory Directory where the files are to be unpacked. int[] indexes indexes of the files in the archive file table. | Edit this page View Source BeginExtractFiles(string, params string[]) Unpacks files asynchronously by their full names to the specified directory. Declaration public void BeginExtractFiles(string directory, params string[] fileNames) Parameters Type Name Description string directory Directory where the files are to be unpacked. string[] fileNames Full file names in the archive file table. | Edit this page View Source Check() Performs the archive integrity test. Declaration public bool Check() Returns Type Description bool True is the archive is ok; otherwise, false. | Edit this page View Source DecompressStream(Stream, Stream, int?, EventHandler<ProgressEventArgs>) Decompress the specified stream (C# inside) Declaration public static void DecompressStream(Stream inStream, Stream outStream, int? inLength, EventHandler<ProgressEventArgs> codeProgressEvent) Parameters Type Name Description Stream inStream The source compressed stream Stream outStream The destination uncompressed stream int? inLength The length of compressed data (null for inStream.Length) EventHandler<ProgressEventArgs> codeProgressEvent The event for handling the code progress | Edit this page View Source Dispose() Releases the unmanaged resources used by SharpSevenZipExtractor. Declaration public void Dispose() | Edit this page View Source ExtractArchive(string) Unpacks the whole archive to the specified directory. Declaration public void ExtractArchive(string directory) Parameters Type Name Description string directory The directory where the files are to be unpacked. | Edit this page View Source ExtractArchiveAsync(string) Unpacks the whole archive asynchronously to the specified directory name at the specified priority. Declaration public Task ExtractArchiveAsync(string directory) Parameters Type Name Description string directory The directory where the files are to be unpacked. Returns Type Description Task | Edit this page View Source ExtractBytes(byte[]) Decompress byte array compressed with LZMA algorithm (C# inside) Declaration public static byte[] ExtractBytes(byte[] data) Parameters Type Name Description byte[] data Byte array to decompress Returns Type Description byte[] Decompressed byte array | Edit this page View Source ExtractFile(int, Stream) Unpacks the file by its index to the specified stream. Declaration public void ExtractFile(int index, Stream stream) Parameters Type Name Description int index Index in the archive file table. Stream stream The stream where the file is to be unpacked. | Edit this page View Source ExtractFile(string, Stream) Unpacks the file by its name to the specified stream. Declaration public void ExtractFile(string fileName, Stream stream) Parameters Type Name Description string fileName The file full name in the archive file table. Stream stream The stream where the file is to be unpacked. | Edit this page View Source ExtractFileAsync(int, Stream) Unpacks the file asynchronously by its name to the specified stream. Declaration public Task ExtractFileAsync(int index, Stream stream) Parameters Type Name Description int index Index in the archive file table. Stream stream The stream where the file is to be unpacked. Returns Type Description Task | Edit this page View Source ExtractFileAsync(string, Stream) Unpacks the file asynchronously by its name to the specified stream. Declaration public Task ExtractFileAsync(string fileName, Stream stream) Parameters Type Name Description string fileName The file full name in the archive file table. Stream stream The stream where the file is to be unpacked. Returns Type Description Task | Edit this page View Source ExtractFiles(ExtractFileCallback) Extracts files from the archive, giving a callback the choice what to do with each file. The order of the files is given by the archive. 7-Zip (and any other solid) archives are NOT supported. Declaration public void ExtractFiles(ExtractFileCallback extractFileCallback) Parameters Type Name Description ExtractFileCallback extractFileCallback The callback to call for each file in the archive. Exceptions Type Condition SharpSevenZipExtractionFailedException Thrown when trying to extract from solid archives. | Edit this page View Source ExtractFiles(string, params int[]) Unpacks files by their indices to the specified directory. Declaration public void ExtractFiles(string directory, params int[] indexes) Parameters Type Name Description string directory Directory where the files are to be unpacked. int[] indexes indexes of the files in the archive file table. | Edit this page View Source ExtractFiles(string, params string[]) Unpacks files by their full names to the specified directory. Declaration public void ExtractFiles(string directory, params string[] fileNames) Parameters Type Name Description string directory Directory where the files are to be unpacked. string[] fileNames Full file names in the archive file table. | Edit this page View Source ExtractFilesAsync(ExtractFileCallback) Extracts files from the archive asynchronously, giving a callback the choice what to do with each file. The order of the files is given by the archive. 7-Zip (and any other solid) archives are NOT supported. Declaration public Task ExtractFilesAsync(ExtractFileCallback extractFileCallback) Parameters Type Name Description ExtractFileCallback extractFileCallback The callback to call for each file in the archive. Returns Type Description Task | Edit this page View Source ExtractFilesAsync(string, params int[]) Unpacks files asynchronously by their indices to the specified directory. Declaration public Task ExtractFilesAsync(string directory, params int[] indexes) Parameters Type Name Description string directory Directory where the files are to be unpacked. int[] indexes indexes of the files in the archive file table. Returns Type Description Task | Edit this page View Source ExtractFilesAsync(string, params string[]) Unpacks files asynchronously by their full names to the specified directory. Declaration public Task ExtractFilesAsync(string directory, params string[] fileNames) Parameters Type Name Description string directory Directory where the files are to be unpacked. string[] fileNames Full file names in the archive file table. Returns Type Description Task Events | Edit this page View Source Extracting Occurs when data are being extracted. Declaration public event EventHandler<ProgressEventArgs>? Extracting Event Type Type Description EventHandler<ProgressEventArgs> Remarks Use this event for accurate progress handling and various ProgressBar.StepBy(e.PercentDelta) routines. | Edit this page View Source ExtractionFinished Occurs when the archive has been unpacked. Declaration public event EventHandler<EventArgs>? ExtractionFinished Event Type Type Description EventHandler<EventArgs> | Edit this page View Source FileExists Occurs during the extraction when a file already exists. Declaration public event EventHandler<FileOverwriteEventArgs>? FileExists Event Type Type Description EventHandler<FileOverwriteEventArgs> | Edit this page View Source FileExtractionFinished Occurs when a file has been successfully unpacked. Declaration public event EventHandler<FileInfoEventArgs>? FileExtractionFinished Event Type Type Description EventHandler<FileInfoEventArgs> | Edit this page View Source FileExtractionStarted Occurs when a new file is going to be unpacked. Declaration public event EventHandler<FileInfoEventArgs>? FileExtractionStarted Event Type Type Description EventHandler<FileInfoEventArgs> Remarks Occurs when 7-zip engine requests for an output stream for a new file to unpack in. Implements IDisposable"
  },
  "api/SharpSevenZip.SharpSevenZipSfx.html": {
    "href": "api/SharpSevenZip.SharpSevenZipSfx.html",
    "title": "Class SharpSevenZipSfx",
    "keywords": "Class SharpSevenZipSfx The class for making 7-zip based self-extracting archives. Inheritance object SharpSevenZipSfx Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SharpSevenZip Assembly: SharpSevenZip.dll Syntax public class SharpSevenZipSfx Constructors | Edit this page View Source SharpSevenZipSfx() Initializes a new instance of the SharpSevenZipSfx class. Declaration public SharpSevenZipSfx() | Edit this page View Source SharpSevenZipSfx(SfxModule) Initializes a new instance of the SharpSevenZipSfx class. Declaration public SharpSevenZipSfx(SfxModule module) Parameters Type Name Description SfxModule module The sfx module to use as a front-end. | Edit this page View Source SharpSevenZipSfx(string) Initializes a new instance of the SharpSevenZipSfx class. Declaration public SharpSevenZipSfx(string moduleFileName) Parameters Type Name Description string moduleFileName Properties | Edit this page View Source ModuleFileName Gets or sets the custom sfx module file name Declaration public string? ModuleFileName { get; set; } Property Value Type Description string | Edit this page View Source SfxModule Gets the sfx module type. Declaration public SfxModule SfxModule { get; } Property Value Type Description SfxModule Methods | Edit this page View Source MakeSfx(Stream, Dictionary<string, string>, Stream) Makes the self-extracting archive. Declaration public void MakeSfx(Stream archive, Dictionary<string, string> settings, Stream sfxStream) Parameters Type Name Description Stream archive The archive stream. Dictionary<string, string> settings The sfx settings. Stream sfxStream The stream to write the self-extracting executable to. | Edit this page View Source MakeSfx(Stream, Dictionary<string, string>, string) Makes the self-extracting archive. Declaration public void MakeSfx(Stream archive, Dictionary<string, string> settings, string sfxFileName) Parameters Type Name Description Stream archive The archive stream. Dictionary<string, string> settings The sfx settings. string sfxFileName The name of the self-extracting executable. | Edit this page View Source MakeSfx(Stream, Stream) Makes the self-extracting archive. Declaration public void MakeSfx(Stream archive, Stream sfxStream) Parameters Type Name Description Stream archive The archive stream. Stream sfxStream The stream to write the self-extracting executable to. | Edit this page View Source MakeSfx(Stream, string) Makes the self-extracting archive. Declaration public void MakeSfx(Stream archive, string sfxFileName) Parameters Type Name Description Stream archive The archive stream. string sfxFileName The name of the self-extracting executable. | Edit this page View Source MakeSfx(string, Dictionary<string, string>, Stream) Makes the self-extracting archive. Declaration public void MakeSfx(string archiveFileName, Dictionary<string, string> settings, Stream sfxStream) Parameters Type Name Description string archiveFileName The archive file name. Dictionary<string, string> settings The sfx settings. Stream sfxStream The stream to write the self-extracting executable to. | Edit this page View Source MakeSfx(string, Dictionary<string, string>, string) Makes the self-extracting archive. Declaration public void MakeSfx(string archiveFileName, Dictionary<string, string> settings, string sfxFileName) Parameters Type Name Description string archiveFileName The archive file name. Dictionary<string, string> settings The sfx settings. string sfxFileName The name of the self-extracting executable. | Edit this page View Source MakeSfx(string, Stream) Makes the self-extracting archive. Declaration public void MakeSfx(string archiveFileName, Stream sfxStream) Parameters Type Name Description string archiveFileName The archive file name. Stream sfxStream The stream to write the self-extracting executable to. | Edit this page View Source MakeSfx(string, string) Makes the self-extracting archive. Declaration public void MakeSfx(string archiveFileName, string sfxFileName) Parameters Type Name Description string archiveFileName The archive file name. string sfxFileName The name of the self-extracting executable."
  },
  "api/SharpSevenZip.ZipEncryptionMethod.html": {
    "href": "api/SharpSevenZip.ZipEncryptionMethod.html",
    "title": "Enum ZipEncryptionMethod",
    "keywords": "Enum ZipEncryptionMethod Zip encryption method enum. Namespace: SharpSevenZip Assembly: SharpSevenZip.dll Syntax public enum ZipEncryptionMethod Fields Name Description Aes128 AES 128 bit encryption method. Aes192 AES 192 bit encryption method. Aes256 AES 256 bit encryption method. ZipCrypto ZipCrypto encryption method."
  },
  "api/SharpSevenZip.html": {
    "href": "api/SharpSevenZip.html",
    "title": "Namespace SharpSevenZip",
    "keywords": "Namespace SharpSevenZip Classes SharpSevenZipArchiveFormat Check the format of archives. SharpSevenZipBase SharpSevenZip Extractor/Compressor base class. Implements Password string, ReportErrors flag. SharpSevenZipCompressor Class to pack data into archives supported by 7-Zip. SharpSevenZipExtractor Class to unpack data from archives supported by 7-Zip. SharpSevenZipSfx The class for making 7-zip based self-extracting archives. Structs ArchiveFileInfo Struct for storing information about files in the 7-zip archive. ArchiveProperty Archive property struct. Interfaces ICancellable The definition of the interface which supports the cancellation of a process. Enums CompressionLevel Compression level enumeration CompressionMethod Compression method enumeration. CompressionMode Archive compression mode. EventSynchronizationStrategy The way of the event synchronization. InArchiveFormat Readable archive format enumeration. LibraryFeature The set of features supported by the library. OperationResult Stores operation result values OutArchiveFormat Writable archive format enumeration. SfxModule Sfx module choice enumeration ZipEncryptionMethod Zip encryption method enum. Delegates ExtractFileCallback Callback delegate for ExtractFiles(ExtractFileCallback)."
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "SharpSevenZip",
    "keywords": "SharpSevenZip This is the documentation for SharpSevenZip."
  },
  "index.html": {
    "href": "index.html",
    "title": "SharpSevenZip",
    "keywords": "SharpSevenZip SharpSevenZip is a 7-zip native library wrapper. Managed 7-zip library written in C# that provides data (self-)extraction and compression (all 7-zip formats are supported). Wraps 7z.dll or any compatible one and makes use of LZMA SDK, includes self-extraction functionality."
  }
}